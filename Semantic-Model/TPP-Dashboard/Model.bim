{
  "name": "SemanticModel",
  "compatibilityLevel": 1400,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "type": "structured",
        "name": "Ed-Fi-Ods",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "localhost",
            "database": "EdFi_Ods_TPDM_2017_306"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "ServiceAccount",
          "EncryptConnection": false
        }
      }
    ],
    "tables": [
      {
        "name": "ApplicantFacts",
        "columns": [
          {
            "name": "ApplicantSchoolyearInstanceKey",
            "dataType": "string",
            "sourceColumn": "ApplicantSchoolyearInstanceKey"
          },
          {
            "name": "ApplicantKey",
            "dataType": "string",
            "sourceColumn": "Applicantkey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "College Board examination scores",
            "dataType": "int64",
            "sourceColumn": "College Board examination scores"
          },
          {
            "name": "ACT score",
            "dataType": "int64",
            "sourceColumn": "ACT score"
          },
          {
            "name": "Letter grade/mark",
            "dataType": "double",
            "sourceColumn": "Letter grade/mark"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_ApplicantFacts = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.ApplicantFacts'\")",
                "in",
                "    analytics_ApplicantFacts"
              ]
            }
          }
        ]
      },
      {
        "name": "ApplicantProgramFact",
        "columns": [
          {
            "name": "ApplicantSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "ApplicantSchoolYearInstanceKey"
          },
          {
            "name": "ProgramSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "ProgramSchoolYearInstanceKey"
          },
          {
            "name": "ApplicantKey",
            "dataType": "string",
            "sourceColumn": "ApplicantKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "ProgramKey",
            "dataType": "string",
            "sourceColumn": "ProgramKey"
          },
          {
            "name": "ProgramName",
            "dataType": "string",
            "sourceColumn": "ProgramName"
          },
          {
            "name": "AcceptedDate",
            "dataType": "dateTime",
            "sourceColumn": "AcceptedDate"
          },
          {
            "name": "WithdrawDate",
            "dataType": "dateTime",
            "sourceColumn": "WithdrawDate"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "Status"
          },
          {
            "name": "ApplicantGPA",
            "dataType": "double",
            "sourceColumn": "ApplicantGPA"
          },
          {
            "name": "TeacherPreparationProviderKey",
            "dataType": "int64",
            "sourceColumn": "TeacherPreparationProviderKey"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_ApplicantProgramFact= Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.ApplicantProgramFact'\")",
                "in",
                "    analytics_ApplicantProgramFact"
              ]
            }
          }
        ]
      },
      {
        "name": "ApplicantDimension",
        "columns": [
          {
            "name": "ApplicantSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "ApplicantSchoolYearInstanceKey"
          },
          {
            "name": "ApplicantKey",
            "dataType": "string",
            "sourceColumn": "ApplicantKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "ApplicantFullName",
            "dataType": "string",
            "sourceColumn": "ApplicantFullName"
          },
          {
            "name": "Sex",
            "dataType": "string",
            "sourceColumn": "Sex"
          },
          {
            "name": "RaceDescriptor",
            "dataType": "string",
            "sourceColumn": "RaceDescriptor"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_ApplicantDimension = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.ApplicantDimension'\")",
                "in",
                "    analytics_ApplicantDimension"
              ]
            }
          }
        ]
      },
      {
        "name": "LocalEducationAgencyDimension",
        "columns": [
          {
            "name": "LocalEducationAgencySchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "LocalEducationAgencySchoolYearInstanceKey"
          },
          {
            "name": "LocalEducationAgencyKey",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "LocalEducationAgencyName",
            "dataType": "string",
            "sourceColumn": "LocalEducationAgencyName"
          },
          {
            "name": "LocalEducationAgencyType",
            "dataType": "string",
            "sourceColumn": "LocalEducationAgencyType"
          },
          {
            "name": "LocalEducationAgencyParentLocalEducationAgencyKey",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyParentLocalEducationAgencyKey"
          },
          {
            "name": "LocalEducationAgencyStateEducationAgencyName",
            "dataType": "string",
            "sourceColumn": "LocalEducationAgencyStateEducationAgencyName"
          },
          {
            "name": "LocalEducationAgencyStateEducationAgencyKey",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyStateEducationAgencyKey"
          },
          {
            "name": "LocalEducationAgencyServiceCenterName",
            "dataType": "string",
            "sourceColumn": "LocalEducationAgencyServiceCenterName"
          },
          {
            "name": "LocalEducationAgencyServiceCenterKey",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyServiceCenterKey"
          },
          {
            "name": "LocalEducationAgencyCharterStatus",
            "dataType": "string",
            "sourceColumn": "LocalEducationAgencyCharterStatus"
          },
          {
            "name": "SuperintendentFullName",
            "dataType": "string",
            "sourceColumn": "SuperIntendentFullName"
          },
          {
            "name": "LocalEducationAgencyAddress",
            "dataType": "string",
            "sourceColumn": "LocalEducationAgencyAddress"
          },
          {
            "name": "TelephoneNumber",
            "dataType": "string",
            "sourceColumn": "TelephoneNumber"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_LocalEducationAgencyDimension = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.LocalEducationAgencyDimension'\")",
                "in",
                "    analytics_LocalEducationAgencyDimension"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "OverallEmployed",
            "expression": "CALCULATE(COUNT(TeacherCandidateStaffDimension[StaffKey]), ALL(TeacherCandidateDimension)) /* Unfiltered Total*/"
          }
        ]
      },
      {
        "name": "MentorTeacherProfessionalDevelopment",
        "columns": [
          {
            "name": "StaffSchoolYearInstancekey",
            "dataType": "string",
            "sourceColumn": "StaffSchoolYearInstancekey"
          },
          {
            "name": "StaffKey",
            "dataType": "int64",
            "sourceColumn": "StaffKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "AttendanceDate",
            "dataType": "dateTime",
            "sourceColumn": "AttendanceDate"
          },
          {
            "name": "ProfessionalDevelopmentTitle",
            "dataType": "string",
            "sourceColumn": "ProfessionalDevelopmentTitle"
          },
          {
            "name": "StaffClassificationDescriptor",
            "dataType": "string",
            "sourceColumn": "StaffClassificationDescriptor"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "Status"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_MentorTeacherProfessionalDevelopment = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.MentorTeacherProfessionalDevelopment'\")",
                "in",
                "    analytics_MentorTeacherProfessionalDevelopment"
              ]
            }
          }
        ]
      },
      {
        "name": "MentorTeacherGradeLevelAcademicSubject",
        "columns": [
          {
            "name": "StaffSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StaffSchoolYearInstanceKey"
          },
          {
            "name": "StaffKey",
            "dataType": "int64",
            "sourceColumn": "StaffKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "GradeLevelBand",
            "dataType": "string",
            "sourceColumn": "GradeLevelBand",
            "sortByColumn": "DisplayOrder"
          },
          {
            "name": "DisplayOrder",
            "dataType": "int64",
            "sourceColumn": "DisplayOrder"
          },
          {
            "name": "AcademicSubjectDescriptor",
            "dataType": "string",
            "sourceColumn": "AcademicSubjectDescriptor"
          },
          {
            "name": "SessionName",
            "dataType": "string",
            "sourceColumn": "SessionName"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_MentorTeacherGradeLevelAcademicSubject = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.MentorTeacherGradeLevelAcademicSubject'\")",
                "in",
                "    analytics_MentorTeacherGradeLevelAcademicSubject"
              ]
            }
          }
        ]
      },
      {
        "name": "SchoolDimension",
        "columns": [
          {
            "name": "SchoolSchoolYearInstaceKey",
            "dataType": "string",
            "sourceColumn": "SchoolSchoolYearInstaceKey"
          },
          {
            "name": "LocalEducationAgencySchoolYearInstaceKey",
            "dataType": "string",
            "sourceColumn": "LocalEducationAgencySchoolYearInstaceKey"
          },
          {
            "name": "SchoolKey",
            "dataType": "int64",
            "sourceColumn": "SchoolKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "SchoolName",
            "dataType": "string",
            "sourceColumn": "SchoolName"
          },
          {
            "name": "SchoolType",
            "dataType": "string",
            "sourceColumn": "SchoolType"
          },
          {
            "name": "Rating",
            "dataType": "string",
            "sourceColumn": "Rating"
          },
          {
            "name": "SchoolCategoryType",
            "dataType": "string",
            "sourceColumn": "SchoolCategoryType"
          },
          {
            "name": "SchoolAddress",
            "dataType": "string",
            "sourceColumn": "SchoolAddress"
          },
          {
            "name": "SchoolCity",
            "dataType": "string",
            "sourceColumn": "SchoolCity"
          },
          {
            "name": "SchoolCounty",
            "dataType": "string",
            "sourceColumn": "SchoolCounty"
          },
          {
            "name": "SchoolState",
            "dataType": "string",
            "sourceColumn": "SchoolState"
          },
          {
            "name": "LocalEducationAgencyName",
            "dataType": "string",
            "sourceColumn": "LocalEducationAgencyName"
          },
          {
            "name": "LocalEducationAgencyKey",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyKey"
          },
          {
            "name": "StateEducationAgencyName",
            "dataType": "string",
            "sourceColumn": "StateEducationAgencyName"
          },
          {
            "name": "StateEducationAgencyKey",
            "dataType": "int64",
            "sourceColumn": "StateEducationAgencyKey"
          },
          {
            "name": "EducationServiceCenterName",
            "dataType": "string",
            "sourceColumn": "EducationServiceCenterName"
          },
          {
            "name": "EducationServiceCenterKey",
            "dataType": "int64",
            "sourceColumn": "EducationServiceCenterKey"
          },
          {
            "name": "FederalLocaleCode",
            "dataType": "string",
            "sourceColumn": "FederalLocaleCode"
          },
          {
            "type": "calculated",
            "name": "High Needs",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " CALCULATE (",
              "        IF (",
              "            FIRSTNONBLANK ( SchoolFacts[PercentStudentsSpecialEducation], TRUE ) >= 0.15",
              "                || FIRSTNONBLANK ( SchoolFacts[HomelessStudentPercentage], TRUE ) >= 0.2",
              "                || FIRSTNONBLANK ( SchoolFacts[PercentStudentsFreeReducedLunch], TRUE ) >= 0.6,",
              "            \"Yes\",",
              "            \"No\"",
              "        ))"
            ]
          },
          {
            "type": "calculated",
            "name": "High Needs Schools",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "CALCULATE (",
              "        CALCULATE (",
              "            COUNTX (",
              "                FILTER (",
              "                    TeacherCandidateStaffDimension,",
              "                    RELATED ( SchoolDimension[High Needs] ) = \"Yes\"",
              "                ),",
              "                TeacherCandidateStaffDimension[StaffKey]",
              "            )",
              "                / CALCULATE (",
              "                    COUNT ( TeacherCandidateStaffDimension[StaffKey] ),",
              "                    ALL ( TeacherCandidateDimension ),",
              "                    ALL ( TeacherCandidateStaffDimension )",
              "                )",
              "        ),",
              "        FILTER (",
              "            ALL ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "            CONTAINS (",
              "                VALUES ( TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "                TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey], TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey]",
              "            )",
              "        )",
              "    )"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "type": "calculated",
            "name": "High Needs Subject",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(COUNTX(FILTER(TeacherCandidateStaffDimension,TeacherCandidateStaffDimension[TeachesHighNeedSubject]=\"Yes\"),TeacherCandidateStaffDimension[StaffKey])/COUNTX(TeacherCandidateStaffDimension,TeacherCandidateStaffDimension[StaffKey]))",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_ApplicantDimension = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.SchoolDimension'\")",
                "in",
                "    analytics_ApplicantDimension"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "HigNeedsSubjectsUSP",
            "expression": [
              "CALCULATE (",
              "        CALCULATE (",
              "            COUNTX (",
              "                FILTER (",
              "                    TeacherCandidateStaffDimension,",
              "                    TeacherCandidateStaffDimension[TeachesHighNeedSubject] = \"Yes\"",
              "                ),",
              "                TeacherCandidateStaffDimension[StaffKey]",
              "            )",
              "                / COUNTX (",
              "                    TeacherCandidateStaffDimension,",
              "                    TeacherCandidateStaffDimension[StaffKey]",
              "                )",
              "        ),",
              "        FILTER (",
              "            ALL ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "            CONTAINS (",
              "                VALUES ( TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "                TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey], TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey]",
              "            )",
              "        )",
              "    )"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "HighNeedsSchoolsUSP",
            "expression": [
              "CALCULATE (",
              "        CALCULATE (",
              "            COUNTX (",
              "                FILTER (",
              "                    TeacherCandidateStaffDimension,",
              "                    RELATED ( SchoolDimension[High Needs] ) = \"Yes\"",
              "                ),",
              "                TeacherCandidateStaffDimension[StaffKey]",
              "            )",
              "                / CALCULATE (",
              "                    COUNT ( TeacherCandidateStaffDimension[StaffKey] ),",
              "                    ALL ( TeacherCandidateDimension ),",
              "                    ALL ( TeacherCandidateStaffDimension )",
              "                )",
              "        ),",
              "        FILTER (",
              "            ALL ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "            CONTAINS (",
              "                VALUES ( TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "                TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey], TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey]",
              "            )",
              "        )",
              "    )"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "StaffCountSchool",
            "expression": [
              "CALCULATE (",
              "        DISTINCTCOUNT ( TeacherCandidateStaffDimension[StaffKey] )",
              "      )"
            ]
          },
          {
            "name": "WorksAtPlacementDistrictSchool",
            "expression": [
              "CALCULATE (",
              "    SUM ( TeacherCandidateStaffDimension[WorksAtPlacementDistrict] )/DISTINCTCOUNT(TeacherCandidateStaffDimension[TeacherCandidateKey])",
              "    )"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "WorksAtPlacementSchoolSchool",
            "expression": [
              "CALCULATE (",
              "    SUM ( TeacherCandidateStaffDimension[WorksAtPlacementSchool] )/DISTINCTCOUNT(TeacherCandidateStaffDimension[TeacherCandidateKey])",
              "   )"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "SchoolFacts",
        "columns": [
          {
            "name": "SchoolSchoolYearInstanceSetKey",
            "dataType": "string",
            "sourceColumn": "SchoolSchoolYearInstanceSetKey"
          },
          {
            "name": "SchoolKey",
            "dataType": "int64",
            "sourceColumn": "SchoolKey"
          },
          {
            "name": "FactsAsOfDate",
            "dataType": "dateTime",
            "sourceColumn": "FactsAsOfDate",
            "formatString": "MM/dd/yy"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "NumberAdministratorsEmployed",
            "dataType": "int64",
            "sourceColumn": "NumberAdministratorsEmployed",
            "summarizeBy": "sum"
          },
          {
            "name": "NumberStudentsEnrolled",
            "dataType": "int64",
            "sourceColumn": "NumberStudentsEnrolled",
            "summarizeBy": "sum"
          },
          {
            "name": "NumberTeachersEmployed",
            "dataType": "int64",
            "sourceColumn": "NumberTeachersEmployed",
            "summarizeBy": "sum"
          },
          {
            "name": "CandidatesPlaced",
            "dataType": "int64",
            "sourceColumn": "CandidatesPlaced",
            "summarizeBy": "sum"
          },
          {
            "name": "PercentStudentsFreeReducedLunch",
            "dataType": "double",
            "sourceColumn": "PercentStudentsFreeReducedLunch",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "PercentStudentsLimitedEnglishProficiency",
            "dataType": "double",
            "sourceColumn": "PercentStudentsLimitedEnglishProficiency",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "PercentStudentsSpecialEducation",
            "dataType": "double",
            "sourceColumn": "PercentStudentsSpecialEducation",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "HomelessStudentPercentage",
            "dataType": "double",
            "sourceColumn": "HomelessStudentPercentage",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "HiringRate",
            "dataType": "double",
            "sourceColumn": "HiringRate",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "RetentionRate",
            "dataType": "double",
            "sourceColumn": "RetentionRate",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "RetirementRate",
            "dataType": "double",
            "sourceColumn": "RetirementRate",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "AverageYearsInDistrictEmployed",
            "dataType": "double",
            "sourceColumn": "AverageYearsInDistrictEmployed",
            "summarizeBy": "average"
          },
          {
            "name": "American Indian - Alaska Native",
            "dataType": "double",
            "sourceColumn": "American Indian - Alaska Native",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Asian",
            "dataType": "double",
            "sourceColumn": "Asian",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Black - African American",
            "dataType": "double",
            "sourceColumn": "Black - African American",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Choose Not to Respond",
            "dataType": "double",
            "sourceColumn": "Choose Not to Respond",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Native Hawaiian - Pacific Islander",
            "dataType": "double",
            "sourceColumn": "Native Hawaiian - Pacific Islander",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "White",
            "dataType": "double",
            "sourceColumn": "White",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Other",
            "dataType": "double",
            "sourceColumn": "Other",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Two or More",
            "dataType": "double",
            "sourceColumn": "Two or More",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Hispanic/Latino",
            "dataType": "double",
            "sourceColumn": "Hispanic/Latino",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "HighNeed",
            "dataType": "string",
            "sourceColumn": "HighNeed"
          },
          {
            "name": "CandidatesEmployed",
            "dataType": "int64",
            "sourceColumn": "CandidatesEmployed",
            "summarizeBy": "sum"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_SchoolFacts = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.SchoolFacts'\")",
                "in",
                "    analytics_SchoolFacts"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "PercentPlaceInHighNeeds",
            "expression": [
              "CALCULATE (",
              "    DIVIDE (",
              "        CALCULATE (",
              "            COUNTX (",
              "                TeacherCandidateFieldworkExperienceFact,",
              "                TeacherCandidateFieldworkExperienceFact[TeacherCandidateKey]",
              "            ),",
              "            FILTER ( SchoolDimension, SchoolDimension[High Needs] = \"Yes\" )",
              "        ),",
              "        COUNTX (",
              "            TeacherCandidateFieldworkExperienceFact,",
              "            TeacherCandidateFieldworkExperienceFact[TeacherCandidateKey]",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "PlacedInHighNeedsSchool",
            "expression": "CALCULATE(COUNT(TeacherCandidateFieldworkExperienceFact[TeacherCandidateKey]), FILTER(SchoolDimension, SchoolDimension[High Needs]=\"Yes\"))",
            "formatString": "0"
          },
          {
            "name": "PlacedInSchool",
            "expression": "CALCULATE(COUNT(TeacherCandidateFieldworkExperienceFact[TeacherCandidateKey]))"
          }
        ]
      },
      {
        "name": "SchoolStudentAssessmentFact",
        "columns": [
          {
            "name": "SchoolSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "SchoolSchoolYearInstanceKey"
          },
          {
            "name": "SchoolKey",
            "dataType": "int64",
            "sourceColumn": "SchoolKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "GradeLevels",
            "dataType": "string",
            "sourceColumn": "GradeLevels",
            "sortByColumn": "DisplayOrder"
          },
          {
            "name": "AcademicSubjectDescriptor",
            "dataType": "string",
            "sourceColumn": "AcademicSubjectDescriptor"
          },
          {
            "name": "DisplayOrder",
            "dataType": "int64",
            "sourceColumn": "DisplayOrder"
          },
          {
            "name": "PerformanceLevelMetPercentage",
            "dataType": "double",
            "sourceColumn": "PerformanceLevelMetPercentage",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_SchoolStudentAssessmentFact = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.SchoolStudentAssessmentFact'\")",
                "in",
                "    analytics_SchoolStudentAssessmentFact"
              ]
            }
          }
        ]
      },
      {
        "name": "Section",
        "columns": [
          {
            "name": "SectionSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "SectionSchoolYearInstanceKey"
          },
          {
            "name": "CourseSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "CourseSchoolYearInstanceKey"
          },
          {
            "name": "SchoolSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "SchoolSchoolYearInstanceKey"
          },
          {
            "name": "CourseKey",
            "dataType": "string",
            "sourceColumn": "CourseKey"
          },
          {
            "name": "SchoolKey",
            "dataType": "int64",
            "sourceColumn": "SchoolKey"
          },
          {
            "name": "SectionKey",
            "dataType": "string",
            "sourceColumn": "SectionKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "SessionName",
            "dataType": "string",
            "sourceColumn": "SessionName"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_Section = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.Section'\")",
                "in",
                "    analytics_Section"
              ]
            }
          }
        ]
      },
      {
        "name": "StaffDimension",
        "columns": [
          {
            "name": "StaffSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StaffSchoolYearInstanceKey"
          },
          {
            "name": "StaffKey",
            "dataType": "int64",
            "sourceColumn": "StaffKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "StaffFullName",
            "dataType": "string",
            "sourceColumn": "StaffFullName"
          },
          {
            "name": "RaceDescriptor",
            "dataType": "string",
            "sourceColumn": "RaceDescriptor"
          },
          {
            "name": "Sex",
            "dataType": "string",
            "sourceColumn": "Sex"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_StaffDimension = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.StaffDimension'\")",
                "in",
                "    analytics_StaffDimension"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "MentorTeacherAll",
            "expression": "CALCULATE(COUNT(StaffDimension[StaffKey]),FILTER(StaffEducationOrganizationAssociationDimension, StaffEducationOrganizationAssociationDimension[StaffClassificationDescriptor]=\"Mentor Teacher\"))"
          },
          {
            "name": "MentorTeacherCompletedEvent",
            "expression": "CALCULATE(DISTINCTCOUNT(MentorTeacherProfessionalDevelopment[StaffKey]),FILTER(StaffEducationOrganizationAssociationDimension, StaffEducationOrganizationAssociationDimension[StaffClassificationDescriptor]=\"Mentor Teacher\"))"
          },
          {
            "name": "MentorTeacherNotCompleted",
            "expression": " [MentorTeacherAll]-[MentorTeacherCompletedEvent]"
          },
          {
            "name": "UserName",
            "expression": "USERNAME()"
          }
        ]
      },
      {
        "name": "StaffCredential",
        "columns": [
          {
            "name": "StaffSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StaffSchoolYearInstanceKey"
          },
          {
            "name": "CredentialSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "CredentialSchoolYearInstanceKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "StaffKey",
            "dataType": "int64",
            "sourceColumn": "StaffKey"
          },
          {
            "name": "CredentialKey",
            "dataType": "string",
            "sourceColumn": "CredentialKey"
          },
          {
            "name": "StateOfIssue",
            "dataType": "string",
            "sourceColumn": "StateOfIssue"
          },
          {
            "name": "CredentialField",
            "dataType": "string",
            "sourceColumn": "CredentialField"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_StaffCredential = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.StaffCredential'\")",
                "in",
                "    analytics_StaffCredential"
              ]
            }
          }
        ]
      },
      {
        "name": "StaffEducationOrganizationAssociationDimension",
        "columns": [
          {
            "name": "EducationOrganizationSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "EducationOrganizationSchoolYearInstanceKey"
          },
          {
            "name": "StaffSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StaffSchoolYearInstanceKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "EducationOrganizationKey",
            "dataType": "int64",
            "sourceColumn": "EducationOrganizationKey"
          },
          {
            "name": "StaffKey",
            "dataType": "int64",
            "sourceColumn": "StaffKey"
          },
          {
            "name": "StaffClassificationDescriptor",
            "dataType": "string",
            "sourceColumn": "StaffClassificationDescriptor"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_StaffEducationOrganizationAssociationDimension = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.StaffEducationOrganizationAssociationDimension'\")",
                "in",
                "    analytics_StaffEducationOrganizationAssociationDimension"
              ]
            }
          }
        ]
      },
      {
        "name": "StaffSectionAssociation",
        "columns": [
          {
            "name": "StaffSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StaffSchoolYearInstanceKey"
          },
          {
            "name": "SectionSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "SectionSchoolYearInstanceKey"
          },
          {
            "name": "SectionKey",
            "dataType": "string",
            "sourceColumn": "SectionKey"
          },
          {
            "name": "StaffKey",
            "dataType": "int64",
            "sourceColumn": "StaffKey"
          },
          {
            "name": "LocalCourseCode",
            "dataType": "string",
            "sourceColumn": "LocalCourseCode"
          },
          {
            "name": "SchoolId",
            "dataType": "int64",
            "sourceColumn": "SchoolId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "SessionName",
            "dataType": "string",
            "sourceColumn": "SessionName"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "sourceColumn": "BeginDate",
            "formatString": "General Date"
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "General Date"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_StaffSectionAssociation = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.StaffSectionAssociation'\")",
                "in",
                "    analytics_StaffSectionAssociation"
              ]
            }
          }
        ]
      },
      {
        "name": "StaffStudentGrowthMeasure",
        "columns": [
          {
            "name": "StaffSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StaffSchoolYearInstanceKey"
          },
          {
            "name": "StaffKey",
            "dataType": "int64",
            "sourceColumn": "StaffKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "FactAsOfDate",
            "dataType": "dateTime",
            "sourceColumn": "FactAsOfDate",
            "formatString": "General Date"
          },
          {
            "name": "StudentGrowthMeasureDate",
            "dataType": "dateTime",
            "sourceColumn": "StudentGrowthMeasureDate",
            "formatString": "General Date"
          },
          {
            "name": "ResultDatatypeType",
            "dataType": "string",
            "sourceColumn": "ResultDatatypeType"
          },
          {
            "name": "StudentGrowthType",
            "dataType": "string",
            "sourceColumn": "StudentGrowthType"
          },
          {
            "name": "StudentGrowthTargetScore",
            "dataType": "int64",
            "sourceColumn": "StudentGrowthTargetScore"
          },
          {
            "name": "StudentGrowthActualScore",
            "dataType": "int64",
            "sourceColumn": "StudentGrowthActualScore"
          },
          {
            "name": "StudentGrowthMet",
            "dataType": "boolean",
            "sourceColumn": "StudentGrowthMet",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "StudentGrowthNCount",
            "dataType": "int64",
            "sourceColumn": "StudentGrowthNCount"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_StaffStudentGrowthMeasure = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.StaffStudentGrowthMeasure'\")",
                "in",
                "    analytics_StaffStudentGrowthMeasure"
              ]
            }
          }
        ]
      },
      {
        "name": "StaffSurveyResponseFact",
        "columns": [
          {
            "name": "SurveyResponseSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "SurveyResponseSchoolYearInstanceKey"
          },
          {
            "name": "StaffSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StaffSchoolYearInstanceKey"
          },
          {
            "name": "SurveyResponseKey",
            "dataType": "string",
            "sourceColumn": "SurveyResponseKey"
          },
          {
            "name": "StaffKey",
            "dataType": "int64",
            "sourceColumn": "Staffkey"
          },
          {
            "name": "SurveyIdentifier",
            "dataType": "string",
            "sourceColumn": "SurveyIdentifier"
          },
          {
            "name": "SurveyTitle",
            "dataType": "string",
            "sourceColumn": "SurveyTitle"
          },
          {
            "name": "SurveySectionTitle",
            "dataType": "string",
            "sourceColumn": "SurveySectionTitle"
          },
          {
            "name": "QuestionText",
            "dataType": "string",
            "sourceColumn": "QuestionText"
          },
          {
            "name": "TextResponse",
            "dataType": "string",
            "sourceColumn": "TextResponse",
            "sortByColumn": "NumericResponse"
          },
          {
            "name": "NoResponse",
            "dataType": "boolean",
            "sourceColumn": "NoResponse",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "NumericResponse",
            "dataType": "int64",
            "sourceColumn": "NumericResponse"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_StaffSurveyResponseFact = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.StaffSurveyResponseFact'\")",
                "in",
                "    analytics_StaffSurveyResponseFact"
              ]
            }
          }
        ]
      },
      {
        "name": "StudentAssessment",
        "columns": [
          {
            "name": "StudentSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolYearInstanceKey"
          },
          {
            "name": "StudentKey",
            "dataType": "int64",
            "sourceColumn": "StudentKey"
          },
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle"
          },
          {
            "name": "Result",
            "dataType": "string",
            "sourceColumn": "Result"
          },
          {
            "name": "PerformanceLevelMet",
            "dataType": "boolean",
            "sourceColumn": "PerformanceLevelMet",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "Latest",
            "dataType": "int64",
            "sourceColumn": "Latest"
          },
          {
            "name": "PerformanceLevel",
            "dataType": "string",
            "sourceColumn": "PerformanceLevel"
          },
          {
            "name": "GradeLevelDescriptor",
            "dataType": "string",
            "sourceColumn": "GradeLevelDescriptor",
            "sortByColumn": "GradeLevelOrder"
          },
          {
            "name": "GradeLevelOrder",
            "dataType": "int64",
            "sourceColumn": "GradeLevelOrder"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_StudentAssessment = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.StudentAssessment'\")",
                "in",
                "    analytics_StudentAssessment"
              ]
            }
          }
        ]
      },
      {
        "name": "StudentDimension",
        "columns": [
          {
            "name": "StudentSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolYearInstanceKey"
          },
          {
            "name": "SchoolSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "SchoolSchoolYearInstanceKey"
          },
          {
            "name": "StudentKey",
            "dataType": "int64",
            "sourceColumn": "StudentKey"
          },
          {
            "name": "SchoolKey",
            "dataType": "int64",
            "sourceColumn": "SchoolKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "StudentFirstName",
            "dataType": "string",
            "sourceColumn": "StudentFirstName"
          },
          {
            "name": "StudentMiddleName",
            "dataType": "string",
            "sourceColumn": "StudentMiddleName"
          },
          {
            "name": "StudentLastName",
            "dataType": "string",
            "sourceColumn": "StudentLastName"
          },
          {
            "name": "EnrollmentDate",
            "dataType": "dateTime",
            "sourceColumn": "EnrollmentDate",
            "formatString": "General Date"
          },
          {
            "name": "GradeLevel",
            "dataType": "string",
            "sourceColumn": "GradeLevel"
          },
          {
            "name": "RaceDescriptor",
            "dataType": "string",
            "sourceColumn": "RaceDescriptor"
          },
          {
            "name": "LimitedEnglishProficiency",
            "dataType": "string",
            "sourceColumn": "LimitedEnglishProficiency"
          },
          {
            "name": "IsEligibleForSchoolFoodService",
            "dataType": "int64",
            "sourceColumn": "IsEligibleForSchoolFoodService"
          },
          {
            "name": "IsHispanic",
            "dataType": "boolean",
            "sourceColumn": "IsHispanic",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "Sex",
            "dataType": "string",
            "sourceColumn": "Sex"
          },
          {
            "name": "ContactName",
            "dataType": "string",
            "sourceColumn": "ContactName"
          },
          {
            "name": "ContactRelationship",
            "dataType": "string",
            "sourceColumn": "ContactRelationship"
          },
          {
            "name": "ContactAddress",
            "dataType": "string",
            "sourceColumn": "ContactAddress"
          },
          {
            "name": "ContactMobilePhoneNumber",
            "dataType": "string",
            "sourceColumn": "ContactMobilePhoneNumber"
          },
          {
            "name": "ContactWorkPhoneNumber",
            "dataType": "string",
            "sourceColumn": "ContactWorkPhoneNumber"
          },
          {
            "name": "ContactEmailAddress",
            "dataType": "string",
            "sourceColumn": "ContactEmailAddress"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_StudentDimension = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.StudentDimension'\")",
                "in",
                "    analytics_StudentDimension"
              ]
            }
          }
        ]
      },
      {
        "name": "StudentSectionDimension",
        "columns": [
          {
            "name": "StudentSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolYearInstanceKey"
          },
          {
            "name": "SectionSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "SectionSchoolYearInstanceKey"
          },
          {
            "name": "CourseSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "CourseSchoolYearInstanceKey"
          },
          {
            "name": "SectionKey",
            "dataType": "string",
            "sourceColumn": "SectionKey"
          },
          {
            "name": "StudentKey",
            "dataType": "int64",
            "sourceColumn": "StudentKey"
          },
          {
            "name": "CourseKey",
            "dataType": "string",
            "sourceColumn": "CourseKey"
          },
          {
            "name": "AcademicSubject",
            "dataType": "string",
            "sourceColumn": "AcademicSubject"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "SessionName",
            "dataType": "string",
            "sourceColumn": "SessionName"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_StudentSectionDimension = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.StudentSectionDimension'\")",
                "in",
                "    analytics_StudentSectionDimension"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherCandidateAcademicRecordFact",
        "columns": [
          {
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolYearInstanceKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "TermDescriptorId",
            "dataType": "int64",
            "sourceColumn": "TermDescriptorId"
          },
          {
            "name": "CumulativeGradePointAverage",
            "dataType": "double",
            "sourceColumn": "CumulativeGradePointAverage"
          },
          {
            "name": "GPAType",
            "dataType": "string",
            "sourceColumn": "GPAType"
          },
          {
            "type": "calculated",
            "name": "GPARange",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " var gpaOverall = TeacherCandidateAcademicRecordFact[CumulativeGradePointAverage] return IF (gpaOverall <= 0.25  && gpaOverall > 0.0, \"< 2.5\", IF( gpaOverall > 0.25 && gpaOverall < 3.0, \"2.5 - 2.99\",IF( gpaOverall >= 3.0 && gpaOverall < 3.5 , \"3.0 -3.49\", IF(gpaOverall >= 3.5, \"3.5 - 4.0\"))))"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateAcademicRecordFact = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidateAcademicRecordFact'\")",
                "in",
                "    analytics_TeacherCandidateAcademicRecordFact"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "OverallGPA",
            "expression": " CALCULATE(MAX(TeacherCandidateAcademicRecordFact[CumulativeGradePointAverage]), FILTER(TeacherCandidateAcademicRecordFact, TeacherCandidateAcademicRecordFact[GPAType] = \"Overall\"))"
          },
          {
            "name": "PreProgramGPA",
            "expression": " CALCULATE(MAX(TeacherCandidateAcademicRecordFact[CumulativeGradePointAverage]), FILTER(TeacherCandidateAcademicRecordFact, TeacherCandidateAcademicRecordFact[GPAType] = \"Pre-Program\"))"
          },
          {
            "name": "ProgramGPA",
            "expression": " CALCULATE(MAX(TeacherCandidateAcademicRecordFact[CumulativeGradePointAverage]), FILTER(TeacherCandidateAcademicRecordFact, TeacherCandidateAcademicRecordFact[GPAType] = \"Program\"))"
          }
        ]
      },
      {
        "name": "StudentSurveyResponseFact",
        "columns": [
          {
            "name": "StudentSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolYearInstanceKey"
          },
          {
            "name": "SurveyResponseSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "SurveyResponseSchoolYearInstanceKey"
          },
          {
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolYearInstanceKey"
          },
          {
            "name": "SurveyResponseKey",
            "dataType": "string",
            "sourceColumn": "SurveyResponseKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "StudentKey",
            "dataType": "int64",
            "sourceColumn": "StudentKey"
          },
          {
            "name": "SurveyIdentifier",
            "dataType": "string",
            "sourceColumn": "SurveyIdentifier"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "SurveyTitle",
            "dataType": "string",
            "sourceColumn": "SurveyTitle"
          },
          {
            "name": "SurveySectionTitle",
            "dataType": "string",
            "sourceColumn": "SurveySectionTitle"
          },
          {
            "name": "QuestionText",
            "dataType": "string",
            "sourceColumn": "QuestionText"
          },
          {
            "name": "TextResponse",
            "dataType": "string",
            "sourceColumn": "TextResponse",
            "sortByColumn": "NumericResponse"
          },
          {
            "name": "NoResponse",
            "dataType": "boolean",
            "sourceColumn": "NoResponse"
          },
          {
            "type": "calculated",
            "name": "GradeLevelBand",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR StudentGrade =",
              "    LOOKUPVALUE ( StudentDimension[GradeLevel] , StudentDimension[StudentKey], StudentSurveyResponseFact[StudentKey])",
              "RETURN",
              "    IF (",
              "        StudentGrade",
              "            IN {",
              "            \"Kindergarten\",",
              "            \"First grade\",",
              "            \"Second grade\",",
              "            \"Third grade\",",
              "            \"Fourth grade\",",
              "            \"Fifth grade\"",
              "        },",
              "        \"Grades k-5\",",
              "        IF (",
              "            StudentGrade IN { \"Sixth grade\", \"Seventh grade\", \"Eighth grade\" },",
              "            \"Grades 6-8\",",
              "            \"Grades 9-12\"",
              "        )",
              "    )"
            ]
          },
          {
            "name": "NumericResponse",
            "dataType": "int64",
            "sourceColumn": "NumericResponse"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_SurveyQuestionResponseFact = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.StudentSurveyResponseFact'\")",
                "in",
                "    analytics_SurveyQuestionResponseFact"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "YesToNoRatio",
            "expression": [
              "",
              "DIVIDE (",
              "    CALCULATE (",
              "        COUNT ( StudentSurveyResponseFact[StudentKey] ),",
              "        FILTER (",
              "            StudentSurveyResponseFact,",
              "            StudentSurveyResponseFact[TextResponse] = \"YES\"",
              "        )",
              "    ),",
              "    CALCULATE (",
              "        COUNT ( StudentSurveyResponseFact[StudentKey] )",
              "           )",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "TeacherCandidateAssessment",
        "columns": [
          {
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolYearInstanceKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "StudentKey",
            "dataType": "int64",
            "sourceColumn": "StudentKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result"
          },
          {
            "name": "PerformanceLevelMet",
            "dataType": "boolean",
            "sourceColumn": "PerformanceLevelMet",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "Latest",
            "dataType": "int64",
            "sourceColumn": "Latest"
          },
          {
            "name": "PerformanceLevel",
            "dataType": "string",
            "sourceColumn": "PerformanceLevel"
          },
          {
            "type": "calculated",
            "name": "MetCriteria",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(TeacherCandidateAssessment[PerformanceLevelMet] = TRUE(), \"Meet Criteria\",\"Does Not Meet Criteria\")"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateAssessment = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidateAssessment'\")",
                "in",
                "    analytics_TeacherCandidateAssessment"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "ACT",
            "expression": "CALCULATE(MAX(TeacherCandidateAssessment[Result]), FILTER(TeacherCandidateAssessment, TeacherCandidateAssessment[AssessmentTitle]=\"ACT\"))"
          },
          {
            "name": "SAT",
            "expression": "CALCULATE(MAX(TeacherCandidateAssessment[Result]), FILTER(TeacherCandidateAssessment, TeacherCandidateAssessment[AssessmentTitle]=\"SAT\"))"
          }
        ]
      },
      {
        "name": "TeacherCandidateCourseTranscriptFact",
        "columns": [
          {
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolYearInstanceKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "CourseCodeKey",
            "dataType": "string",
            "sourceColumn": "CourseCodeKey"
          },
          {
            "name": "FinalLetterGradeEarned",
            "dataType": "string",
            "sourceColumn": "FinalLetterGradeEarned"
          },
          {
            "name": "FinalNumericGradeEarned",
            "dataType": "string",
            "sourceColumn": "FinalNumericGradeEarned",
            "summarizeBy": "none"
          },
          {
            "name": "Term",
            "dataType": "string",
            "sourceColumn": "Term"
          },
          {
            "name": "TeacherPreparationProviderKey",
            "dataType": "int64",
            "sourceColumn": "TeacherPreparationProviderKey"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateCourseTranscriptFact = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidateCourseTranscriptFact'\")",
                "in",
                "    analytics_TeacherCandidateCourseTranscriptFact"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherCandidateDimension",
        "columns": [
          {
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolYearInstanceKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey",
            "summarizeBy": "distinctCount"
          },
          {
            "name": "StudentKey",
            "dataType": "int64",
            "sourceColumn": "StudentKey"
          },
          {
            "name": "TeacherPreparationProviderKey",
            "dataType": "int64",
            "sourceColumn": "TeacherPreparationProviderKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "TeacherCandidateFirstName",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateFirstName"
          },
          {
            "name": "TeacherCandidateMiddleName",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateMiddleName"
          },
          {
            "name": "TeacherCandidateLastName",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateLastName"
          },
          {
            "name": "EnrollmentDate",
            "dataType": "dateTime",
            "sourceColumn": "EnrollmentDate",
            "formatString": "General Date"
          },
          {
            "name": "Sex",
            "dataType": "string",
            "sourceColumn": "Sex"
          },
          {
            "name": "RaceDescriptor",
            "dataType": "string",
            "sourceColumn": "RaceDescriptor"
          },
          {
            "name": "TeacherCandidateName",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateName"
          },
          {
            "name": "TeacherCandidateAddress",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateAddress"
          },
          {
            "name": "TeacherCandidateMobilePhoneNumber",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateMobilePhoneNumber"
          },
          {
            "name": "TeacherCandidateWorkPhoneNumber",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateWorkPhoneNumber"
          },
          {
            "name": "ContactEmailAddress",
            "dataType": "string",
            "sourceColumn": "ContactEmailAddress"
          },
          {
            "name": "TPPDegreeType",
            "dataType": "string",
            "sourceColumn": "TPPDegreeType"
          },
          {
            "name": "GradeLevel",
            "dataType": "string",
            "sourceColumn": "GradeLevel"
          },
          {
            "name": "MajorSpecialization",
            "dataType": "string",
            "sourceColumn": "MajorSpecialization"
          },
          {
            "name": "MinorSpecialization",
            "dataType": "string",
            "sourceColumn": "MinorSpecialization"
          },
          {
            "name": "ProgramComplete",
            "dataType": "boolean",
            "sourceColumn": "ProgramComplete"
          },
          {
            "name": "CohortYear",
            "dataType": "int64",
            "sourceColumn": "CohortYear"
          },
          {
            "name": "EconomicDisadvantaged",
            "dataType": "boolean",
            "sourceColumn": "EconomicDisadvantaged"
          },
          {
            "name": "FirstGenerationStudent",
            "dataType": "boolean",
            "sourceColumn": "FirstGenerationStudent"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate",
            "formatString": "General Date"
          },
          {
            "type": "calculated",
            "name": "Mentor Teacher",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "CALCULATE (",
              "        FIRSTNONBLANK ( StaffDimension[StaffFullName], TRUE () ),",
              "           SUMMARIZE(",
              "            CALCULATETABLE (",
              "                StaffDimension,",
              "                FILTER (",
              "                    TeacherCandidateStaffAssociation,",
              "                    TeacherCandidateStaffAssociation[PositionTitle] = \"Mentor Teacher\"",
              "                )",
              "            ),",
              "            StaffDimension[StaffKey]",
              "        )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Site Coordinator",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "CALCULATE (",
              "        FIRSTNONBLANK ( StaffDimension[StaffFullName], TRUE () ),",
              "           SUMMARIZE(",
              "            CALCULATETABLE (",
              "                StaffDimension,",
              "                FILTER (",
              "                    TeacherCandidateStaffAssociation,",
              "                    TeacherCandidateStaffAssociation[PositionTitle] = \"Site Coordinator\"",
              "                )",
              "            ),",
              "            StaffDimension[StaffKey]",
              "        )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Employed",
            "dataType": "boolean",
            "isDataTypeInferred": true,
            "expression": [
              "CALCULATE (",
              "        IF (",
              "            FIRSTNONBLANK ( TeacherCandidateStaffDimension[TeacherCandidateKey], TRUE () )",
              "                = BLANK (),",
              "            FALSE (),",
              "            TRUE ()",
              "        ),",
              "        FILTER (",
              "            ALL ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "            CONTAINS (",
              "                VALUES ( TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "                TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey], TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey]",
              "            )",
              "        )",
              "    )"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateDimension = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidateDimension'\")",
                "in",
                "    analytics_TeacherCandidateDimension"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherCandidateEnrolledSectionAssociation",
        "columns": [
          {
            "name": "TeacherCandidateSchoolYearInstanceSetKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolYearInstanceSetKey"
          },
          {
            "name": "SectionKey",
            "dataType": "string",
            "sourceColumn": "SectionKey"
          },
          {
            "name": "StudentKey",
            "dataType": "int64",
            "sourceColumn": "StudentKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "InstructorFullName",
            "dataType": "string",
            "sourceColumn": "InstructorFullName"
          },
          {
            "name": "MediumOfInstruction",
            "dataType": "string",
            "sourceColumn": "MediumOfInstruction"
          },
          {
            "name": "CourseTitle",
            "dataType": "string",
            "sourceColumn": "CourseTitle"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "sourceColumn": "BeginDate",
            "formatString": "General Date"
          },
          {
            "name": "SchoolId",
            "dataType": "int64",
            "sourceColumn": "SchoolId"
          },
          {
            "name": "SessionName",
            "dataType": "string",
            "sourceColumn": "SessionName"
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "General Date"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateEnrolledSectionAssociation = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidateEnrolledSectionAssociation'\")",
                "in",
                "    analytics_TeacherCandidateEnrolledSectionAssociation"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherCandidateFieldworkExperienceFact",
        "columns": [
          {
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolYearInstanceKey"
          },
          {
            "name": "SchoolSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "SchoolSchoolYearInstanceKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "SchoolKey",
            "dataType": "int64",
            "sourceColumn": "SchoolKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "LocalEducationAgencyKey",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyKey"
          },
          {
            "name": "PlacementSchool",
            "dataType": "string",
            "sourceColumn": "PlacementSchool"
          },
          {
            "name": "PlacementDistrict",
            "dataType": "string",
            "sourceColumn": "PlacementDistrict"
          },
          {
            "name": "Semester",
            "dataType": "string",
            "sourceColumn": "Semester"
          },
          {
            "name": "HoursPerWeek",
            "dataType": "double",
            "sourceColumn": "HoursPerWeek"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateFieldworkExperienceFact = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidateFieldworkExperienceFact'\")",
                "in",
                "    analytics_TeacherCandidateFieldworkExperienceFact"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherCandidatePerformanceMeasureFact",
        "columns": [
          {
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolYearInstanceKey"
          },
          {
            "name": "StaffSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StaffSchoolYearInstanceKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "StaffKey",
            "dataType": "int64",
            "sourceColumn": "StaffKey"
          },
          {
            "name": "PerformanceMeasureKey",
            "dataType": "string",
            "sourceColumn": "PerformanceMeasureKey"
          },
          {
            "name": "PerformanceMeasureType",
            "dataType": "string",
            "sourceColumn": "PerformanceMeasureType",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ActualDateOfPerformanceMeasure",
            "dataType": "dateTime",
            "sourceColumn": "ActualDateOfPerformanceMeasure"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "RubricLevelCode",
            "dataType": "string",
            "sourceColumn": "RubricLevelCode"
          },
          {
            "name": "NumericResponse",
            "dataType": "int64",
            "sourceColumn": "NumericResponse"
          },
          {
            "name": "Term",
            "dataType": "string",
            "sourceColumn": "Term"
          },
          {
            "name": "RubricTitle",
            "dataType": "string",
            "sourceColumn": "RubricTitle"
          },
          {
            "name": "LevelTitle",
            "dataType": "string",
            "sourceColumn": "LevelTitle"
          },
          {
            "name": "AreaOfRefinement",
            "dataType": "boolean",
            "sourceColumn": "AreaOfRefinement"
          },
          {
            "name": "AreaOfReinforcement",
            "dataType": "boolean",
            "sourceColumn": "AreaOfReinforcement"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "Status"
          },
          {
            "name": "Assessment",
            "dataType": "string",
            "sourceColumn": "Assessment"
          },
          {
            "type": "calculated",
            "name": "NumericResponseBand",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "var numericResponse =  [NumericResponse] return IF (numericResponse <= 2.0  && numericResponse > 0.0, \"< 2\", IF( numericResponse > 2 && numericResponse < 3.0, \"2.0 - 3.0\",IF( numericResponse >= 3.0 && numericResponse < 4.0 , \"3.0 - 4.0\", IF(numericResponse >= 4.0, \"4.0 - 5.0\"))))"
          },
          {
            "name": "SelfReflection",
            "dataType": "string",
            "sourceColumn": "SelfReflection"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidatePerformanceMeasureFact = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidatePerformanceMeasureFact'\")",
                "in",
                "    analytics_TeacherCandidatePerformanceMeasureFact"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "FallNumericResponse",
            "expression": "CALCULATE(MAX(TeacherCandidatePerformanceMeasureFact[NumericResponse]), FILTER(TeacherCandidatePerformanceMeasureFact,TeacherCandidatePerformanceMeasureFact[Term]=\"Fall Semester\"))"
          },
          {
            "name": "SpringNumericResponse",
            "expression": "CALCULATE(MAX(TeacherCandidatePerformanceMeasureFact[NumericResponse]), FILTER(TeacherCandidatePerformanceMeasureFact,TeacherCandidatePerformanceMeasureFact[Term]=\"Spring Semester\"))"
          },
          {
            "name": "SummerNumericResponse",
            "expression": "CALCULATE(MAX(TeacherCandidatePerformanceMeasureFact[NumericResponse]), FILTER(TeacherCandidatePerformanceMeasureFact,TeacherCandidatePerformanceMeasureFact[Term]=\"Summer Semester\"))"
          }
        ]
      },
      {
        "name": "TeacherCandidateProgramFact",
        "columns": [
          {
            "name": "TeacherCandidateSchoolyearInstaceKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolyearInstaceKey"
          },
          {
            "name": "ProgramSchoolyearInstaceKey",
            "dataType": "string",
            "sourceColumn": "ProgramSchoolyearInstaceKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "ProgramKey",
            "dataType": "string",
            "sourceColumn": "ProgramKey"
          },
          {
            "name": "Schoolyear",
            "dataType": "int64",
            "sourceColumn": "Schoolyear"
          },
          {
            "name": "ReasonExitedDescriptor",
            "dataType": "string",
            "sourceColumn": "ReasonExitedDescriptor"
          },
          {
            "name": "ProgramName",
            "dataType": "string",
            "sourceColumn": "ProgramName"
          },
          {
            "name": "ProgramStatus",
            "dataType": "string",
            "sourceColumn": "ProgramStatus"
          },
          {
            "name": "TeacherPreparationProviderSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherPreparationProviderSchoolYearInstanceKey"
          },
          {
            "name": "TeacherPreparationProviderKey",
            "dataType": "int64",
            "sourceColumn": "TeacherPreparationProviderKey"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateProgramFact = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidateProgramFact'\")",
                "in",
                "    analytics_TeacherCandidateProgramFact"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherCandidateStaffAssociation",
        "columns": [
          {
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolYearInstanceKey"
          },
          {
            "name": "StaffSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StaffSchoolYearInstanceKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "StaffKey",
            "dataType": "int64",
            "sourceColumn": "StaffKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "EducationOrganizationId",
            "dataType": "int64",
            "sourceColumn": "EducationOrganizationId"
          },
          {
            "name": "FullName",
            "dataType": "string",
            "sourceColumn": "FullName"
          },
          {
            "name": "PositionTitle",
            "dataType": "string",
            "sourceColumn": "PositionTitle"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateStaffAssociation = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidateStaffAssociation'\")",
                "in",
                "    analytics_TeacherCandidateStaffAssociation"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherCandidateStaffDimension",
        "columns": [
          {
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolYearInstanceKey"
          },
          {
            "name": "StaffSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StaffSchoolYearInstanceKey"
          },
          {
            "name": "SchoolSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "SchoolSchoolYearInstanceKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "StaffKey",
            "dataType": "int64",
            "sourceColumn": "StaffKey"
          },
          {
            "name": "SchoolKey",
            "dataType": "int64",
            "sourceColumn": "SchoolKey"
          },
          {
            "name": "LocalEducationAgencyKey",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "sourceColumn": "BeginDate",
            "formatString": "General Date"
          },
          {
            "name": "RaceDescriptor",
            "dataType": "string",
            "sourceColumn": "RaceDescriptor"
          },
          {
            "name": "SexDescriptor",
            "dataType": "string",
            "sourceColumn": "SexDescriptor"
          },
          {
            "name": "StaffClassificationDescriptorId",
            "dataType": "int64",
            "sourceColumn": "StaffClassificationDescriptorId"
          },
          {
            "name": "PositionTitle",
            "dataType": "string",
            "sourceColumn": "PositionTitle"
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "General Date"
          },
          {
            "name": "OrderOfAssignment",
            "dataType": "int64",
            "sourceColumn": "OrderOfAssignment"
          },
          {
            "name": "EmploymentEducationOrganizationId",
            "dataType": "int64",
            "sourceColumn": "EmploymentEducationOrganizationId"
          },
          {
            "name": "EmploymentStatus",
            "dataType": "string",
            "sourceColumn": "EmploymentStatus"
          },
          {
            "name": "EmploymentHireDate",
            "dataType": "dateTime",
            "sourceColumn": "EmploymentHireDate",
            "formatString": "General Date"
          },
          {
            "name": "RetentionYears",
            "dataType": "int64",
            "sourceColumn": "RetentionYears"
          },
          {
            "name": "RetentionBand",
            "dataType": "string",
            "sourceColumn": "RetentionBand"
          },
          {
            "type": "calculated",
            "name": "LocalEducationAgency",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FIRSTNONBLANK(SchoolDimension[LocalEducationAgencyName],TRUE())"
          },
          {
            "type": "calculated",
            "name": "SchoolName",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FIRSTNONBLANK(SchoolDimension[SchoolName],TRUE())"
          },
          {
            "type": "calculated",
            "name": "TeacherCandidateProgram",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "CALCULATE (",
              "        CALCULATE (",
              "            FIRSTNONBLANK ( TeacherCandidateProgramFact[ProgramName], TRUE () )",
              "        ),",
              "        FILTER (",
              "            ALL ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "            CONTAINS (",
              "                VALUES ( TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "                TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey], TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey]",
              "            )",
              "        )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "TeachesHighNeedSubject",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CALCULATE(IF(FIRSTNONBLANK(TeacherCandidateStaffCredential[CredentialField],TRUE()) IN {\"Mathematics\", \"Life and Physical Sciences\", \"Agricultural Science and Technology\", \"Computer Science\"},\"Yes\",\"No\"))"
          },
          {
            "type": "calculated",
            "name": "WorksAtPlacementDistrict",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "    IF (",
              "    LOOKUPVALUE (",
              "        TeacherCandidateFieldworkPlacement[TeacherCandidateKey],",
              "        TeacherCandidateFieldworkPlacement[TeacherCandidateKey], TeacherCandidateStaffDimension[TeacherCandidateKey],",
              "        TeacherCandidateFieldworkPlacement[LocalEducationAgencyKey], TeacherCandidateStaffDimension[LocalEducationAgencyKey]",
              "    )",
              "        = BLANK (),",
              "    0,",
              "    1",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "WorksAtPlacementSchool",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " IF (",
              "    LOOKUPVALUE (",
              "        TeacherCandidateFieldworkPlacement[TeacherCandidateKey],",
              "        TeacherCandidateFieldworkPlacement[TeacherCandidateKey], TeacherCandidateStaffDimension[TeacherCandidateKey],",
              "        TeacherCandidateFieldworkPlacement[SchoolKey], TeacherCandidateStaffDimension[SchoolKey]",
              "    )",
              "        = BLANK (),",
              "    0,",
              "    1",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateStaffDimension = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidateStaffDimension'\")",
                "in",
                "    analytics_TeacherCandidateStaffDimension"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "AllFirstYearUSP",
            "expression": [
              "CALCULATE (",
              "    AVERAGE ( StaffStudentGrowthMeasure[StudentGrowthActualScore] ),",
              "    FILTER (",
              "        ALL ( TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "        CONTAINS (",
              "            VALUES ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "            TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey], TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey]",
              "        )",
              "    ),",
              "    FILTER (",
              "        TeacherCandidateDimension,",
              "        TeacherCandidateDimension[ProgramComplete] = TRUE ()",
              "    ),",
              "    FILTER (",
              "        TeacherCandidateStaffDimension,",
              "        TeacherCandidateStaffDimension[RetentionBand] = \"1 Year\"",
              "    )",
              ")"
            ]
          },
          {
            "name": "AllTeachersUSP",
            "expression": [
              "CALCULATE (",
              "    AVERAGE ( StaffStudentGrowthMeasure[StudentGrowthActualScore] ),",
              "    FILTER (",
              "        ALL ( TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "        CONTAINS (",
              "            VALUES ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "            TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey], TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey]",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "StaffCountSchoolUSP",
            "expression": [
              "CALCULATE (",
              "    DISTINCTCOUNT ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "    FILTER (",
              "        ALL ( TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "        CONTAINS (",
              "            VALUES ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "            TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey], TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey]",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "StudentAssessment",
            "expression": [
              "CALCULATE (",
              "    DIVIDE (",
              "        CALCULATE (",
              "            DISTINCTCOUNT ( StudentAssessment[StudentKey] ),",
              "            FILTER ( StudentAssessment, StudentAssessment[PerformanceLevelMet] = TRUE () )",
              "        ),",
              "        CALCULATE ( DISTINCTCOUNT ( StudentAssessment[StudentKey] ) )",
              "    ),",
              "    FILTER (",
              "        ALL ( TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "        CONTAINS (",
              "            VALUES ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "            TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey], TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey]",
              "        )",
              "    ),",
              "    ALLSELECTED ( TeacherCandidateDimension )",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "WorksInPlacementDistrictUSP",
            "expression": [
              "CALCULATE (",
              "    SUM ( TeacherCandidateStaffDimension[WorksAtPlacementDistrict] ),",
              "    FILTER (",
              "        ALL ( TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "        CONTAINS (",
              "            VALUES ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "            TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey], TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey]",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "WorksInPlacementSchoolUSP",
            "expression": [
              "CALCULATE(sum(TeacherCandidateStaffDimension[WorksAtPlacementSchool]), FILTER (",
              "        ALL ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "        CONTAINS  (",
              "            VALUES ( TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey] ), ",
              "           TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey],",
              "            TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ",
              "        )",
              "    ))"
            ]
          },
          {
            "name": "AllCompletersCountUSP",
            "expression": [
              "CALCULATE (",
              "    AVERAGE ( StaffStudentGrowthMeasure[StudentGrowthActualScore] ),",
              "    FILTER (",
              "        ALL ( TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "        CONTAINS (",
              "            VALUES ( TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey] ),",
              "            TeacherCandidateStaffDimension[TeacherCandidateSchoolYearInstanceKey], TeacherCandidateDimension[TeacherCandidateSchoolYearInstanceKey]",
              "        )",
              "    ),",
              "    FILTER (",
              "        TeacherCandidateDimension,",
              "        TeacherCandidateDimension[ProgramComplete] = TRUE ()",
              "    )",
              ")"
            ]
          }
        ]
      },
      {
        "name": "TeacherCandidateStaffCredential",
        "columns": [
          {
            "name": "StaffSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "StaffSchoolYearInstanceKey"
          },
          {
            "name": "StaffKey",
            "dataType": "int64",
            "sourceColumn": "StaffKey"
          },
          {
            "name": "CredentialKey",
            "dataType": "string",
            "sourceColumn": "CredentialKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "StateOfIssue",
            "dataType": "string",
            "sourceColumn": "StateOfIssue"
          },
          {
            "name": "CredentialField",
            "dataType": "string",
            "sourceColumn": "CredentialField"
          },
          {
            "name": "CertificationStatus",
            "dataType": "string",
            "sourceColumn": "CertificationStatus"
          },
          {
            "name": "AttemptStatus",
            "dataType": "string",
            "sourceColumn": "AttemptStatus"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateStaffCredential = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidateStaffCredential'\")",
                "in",
                "    analytics_TeacherCandidateStaffCredential"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherCandidateSurveyResponseFact",
        "columns": [
          {
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolYearInstanceKey"
          },
          {
            "name": "SurveyResponseKey",
            "dataType": "string",
            "sourceColumn": "SurveyResponseKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "SurveyIdentifier",
            "dataType": "string",
            "sourceColumn": "SurveyIdentifier"
          },
          {
            "name": "SurveyTitle",
            "dataType": "string",
            "sourceColumn": "SurveyTitle"
          },
          {
            "name": "SurveySectionTitle",
            "dataType": "string",
            "sourceColumn": "SurveySectionTitle"
          },
          {
            "name": "QuestionText",
            "dataType": "string",
            "sourceColumn": "QuestionText"
          },
          {
            "name": "TextResponse",
            "dataType": "string",
            "sourceColumn": "TextResponse",
            "sortByColumn": "NumericResponse"
          },
          {
            "name": "NoResponse",
            "dataType": "boolean",
            "sourceColumn": "NoResponse",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "NumericResponse",
            "dataType": "int64",
            "sourceColumn": "NumericResponse"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateSurveyResponseFact = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidateSurveyResponseFact'\")",
                "in",
                "    analytics_TeacherCandidateSurveyResponseFact"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherPreparationProviderDimension",
        "columns": [
          {
            "name": "TeacherPreparationProviderSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherPreparationProviderSchoolYearInstanceKey"
          },
          {
            "name": "TeacherPreparationProviderKey",
            "dataType": "int64",
            "sourceColumn": "TeacherPreparationProviderKey"
          },
          {
            "name": "UniversityKey",
            "dataType": "int64",
            "sourceColumn": "UniversityKey"
          },
          {
            "name": "Schoolyear",
            "dataType": "int64",
            "sourceColumn": "Schoolyear"
          },
          {
            "name": "FederalLocaleCodeType",
            "dataType": "string",
            "sourceColumn": "FederalLocaleCodeType"
          },
          {
            "name": "TeacherPreparationProviderName",
            "dataType": "string",
            "sourceColumn": "TeacherPreparationProviderName"
          },
          {
            "name": "TeacherPreparationProviderWebSite",
            "dataType": "string",
            "sourceColumn": "TeacherPreparationProviderWebSite"
          },
          {
            "name": "UniversityName",
            "dataType": "string",
            "sourceColumn": "UniversityName"
          },
          {
            "name": "UniversityWebSite",
            "dataType": "string",
            "sourceColumn": "UniversityWebSite"
          },
          {
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "LastModifiedDate"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherPreparationProviderDimension = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherPreparationProviderDimension'\")",
                "in",
                "    analytics_TeacherPreparationProviderDimension"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherPreparationProviderProgramDimension",
        "columns": [
          {
            "name": "ProgramSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "ProgramSchoolYearInstanceKey"
          },
          {
            "name": "ProgramKey",
            "dataType": "string",
            "sourceColumn": "ProgramKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "ProgramName",
            "dataType": "string",
            "sourceColumn": "ProgramName"
          },
          {
            "name": "ProgramType",
            "dataType": "string",
            "sourceColumn": "ProgramType"
          },
          {
            "name": "TeacherPreparationProviderKey",
            "dataType": "int64",
            "sourceColumn": "TeacherPreparationProviderKey"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherPreparationProviderProgramDimension = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherPreparationProviderProgramDimension'\")",
                "in",
                "    analytics_TeacherPreparationProviderProgramDimension"
              ]
            }
          }
        ]
      },
      {
        "name": "Security",
        "columns": [
          {
            "name": "StaffUSI",
            "dataType": "int64",
            "sourceColumn": "StaffUSI"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "StaffClassificationDescriptor",
            "dataType": "string",
            "sourceColumn": "StaffClassificationDescriptor"
          },
          {
            "name": "LoginId",
            "dataType": "string",
            "sourceColumn": "LoginId"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_config_Security = Source{[Schema=\"analytics\",Item=\"Security\"]}[Data]",
                "in",
                "    analytics_config_Security"
              ]
            }
          }
        ]
      },
      {
        "name": "SectionStudentDimension",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "StudentKey",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[StudentKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "StudentFirstName",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[StudentFirstName]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "StudentMiddleName",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[StudentMiddleName]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "StudentLastName",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[StudentLastName]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SchoolKey",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[SchoolKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "EnrollmentDate",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[EnrollmentDate]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "GradeLevel",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[GradeLevel]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "LimitedEnglishProficiency",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[LimitedEnglishProficiency]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "IsEligibleForSchoolFoodService",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[IsEligibleForSchoolFoodService]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "IsHispanic",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[IsHispanic]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Sex",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[Sex]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ContactName",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[ContactName]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ContactRelationship",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[ContactRelationship]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ContactAddress",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[ContactAddress]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ContactMobilePhoneNumber",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[ContactMobilePhoneNumber]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ContactWorkPhoneNumber",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[ContactWorkPhoneNumber]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ContactEmailAddress",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[ContactEmailAddress]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "LastModifiedDate",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[LastModifiedDate]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "RaceDescriptor",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[RaceDescriptor]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "StudentSchoolYearInstanceKey",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[StudentSchoolYearInstanceKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SchoolYear",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[SchoolYear]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SchoolSchoolYearInstanceKey",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StudentDimension[SchoolSchoolYearInstanceKey]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "StudentDimension"
            }
          }
        ]
      },
      {
        "name": "TeacherCandidateFieldworkPlacement",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "PlacementSchool",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateFieldworkExperienceFact[PlacementSchool]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "PlacementDistrict",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateFieldworkExperienceFact[PlacementDistrict]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Semester",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateFieldworkExperienceFact[Semester]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateFieldworkExperienceFact[TeacherCandidateKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SchoolKey",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateFieldworkExperienceFact[SchoolKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "LocalEducationAgencyKey",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateFieldworkExperienceFact[LocalEducationAgencyKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "HoursPerWeek",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateFieldworkExperienceFact[HoursPerWeek]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SchoolYear",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateFieldworkExperienceFact[SchoolYear]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateFieldworkExperienceFact[TeacherCandidateSchoolYearInstanceKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SchoolSchoolYearInstanceKey",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateFieldworkExperienceFact[SchoolSchoolYearInstanceKey]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "TeacherCandidateFieldworkExperienceFact"
            }
          }
        ]
      },
      {
        "name": "TeacherCandidateGatewayDetailSummary",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Gateway",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[GateWay]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Criteria",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Criteria]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Status",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Status]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "",
                "UNION (",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayOneCourseComplete] )",
                "            )",
                "        ),",
                "        TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #1\",",
                "        \"Criteria\", \"Criteria #2 - Final Grade\",",
                "        \"Status\", IF (",
                "            FIRSTNONBLANK (",
                "                TeacherCandidateGatewayCourseCompleted[GatewayOneCourseComplete],",
                "                TRUE ()",
                "            ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayOneCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey], ",
                "        \"GateWay\", \"Gateway #1\",",
                "        \"Criteria\", \"Criteria #1 - GPA\",",
                "        \"Status\", IF (",
                "            CALCULATE ( MAX ( TeacherCandidateGatewayCourseCompleted[GatewayGPA] ) >= 2.5 ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayTwoCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #2\",",
                "        \"Criteria\", \"Criteria #2 - Final Grade\",",
                "        \"Status\", IF (",
                "            FIRSTNONBLANK (",
                "                TeacherCandidateGatewayCourseCompleted[GatewayTwoCourseComplete],",
                "                TRUE ()",
                "            ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayTwoCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #2\",",
                "        \"Criteria\", \"Criteria #1 - GPA\",",
                "        \"Status\", IF (",
                "            CALCULATE ( MAX ( TeacherCandidateGatewayCourseCompleted[GatewayGPA] ) >= 2.5 ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayThreeCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #3\",",
                "        \"Criteria\", \"Criteria #2 - Final Grade\",",
                "        \"Status\", IF (",
                "            FIRSTNONBLANK (",
                "                TeacherCandidateGatewayCourseCompleted[GatewayThreeCourseComplete],",
                "                TRUE ()",
                "            ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayThreeCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #3\",",
                "        \"Criteria\", \"Criteria #1 - GPA\",",
                "        \"Status\", IF (",
                "            CALCULATE ( MAX ( TeacherCandidateGatewayCourseCompleted[GatewayGPA] ) >= 2.8 ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayThreeCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #3\",",
                "        \"Criteria\", \"Criteria #3 - Fieldwork\",",
                "        \"Status\", IF (",
                "            CALCULATE (",
                "                MAX ( TeacherCandidateGatewayCourseCompleted[GatewayFieldWorkHours] ) >= 10",
                "            ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayFourCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #4\",",
                "        \"Criteria\", \"Criteria #2 - Final Grade\",",
                "        \"Status\", IF (",
                "            FIRSTNONBLANK (",
                "                TeacherCandidateGatewayCourseCompleted[GatewayFourCourseComplete],",
                "                TRUE ()",
                "            ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayFourCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #4\",",
                "        \"Criteria\", \"Criteria #1 - GPA\",",
                "        \"Status\", IF (",
                "            CALCULATE ( MAX ( TeacherCandidateGatewayCourseCompleted[GatewayGPA] ) >= 2.8 ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayFourCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #4\",",
                "        \"Criteria\", \"Criteria #3 - Fieldwork\",",
                "        \"Status\", IF (",
                "            CALCULATE (",
                "                MAX ( TeacherCandidateGatewayCourseCompleted[GatewayFieldWorkHours] ) >= 10",
                "            ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayOneCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #1\",",
                "        \"Criteria\", \"Overall\",",
                "        \"Status\", IF (",
                "            FIRSTNONBLANK (",
                "                TeacherCandidateGatewayCourseCompleted[GatewayOneCourseComplete],",
                "                TRUE ()",
                "            )",
                "                && FIRSTNONBLANK (",
                "                    TeacherCandidateGatewayCourseCompleted[GatewayGPA] >= 2.5,",
                "                    TRUE ()",
                "                ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayTwoCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #2\",",
                "        \"Criteria\", \"Overall\",",
                "        \"Status\", IF (",
                "            FIRSTNONBLANK (",
                "                TeacherCandidateGatewayCourseCompleted[GatewayTwoCourseComplete],",
                "                TRUE ()",
                "            )",
                "                && FIRSTNONBLANK (",
                "                    TeacherCandidateGatewayCourseCompleted[GatewayGPA] >= 2.8,",
                "                    TRUE ()",
                "                ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayThreeCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #3\",",
                "        \"Criteria\", \"Overall\",",
                "        \"Status\", IF (",
                "            FIRSTNONBLANK (",
                "                TeacherCandidateGatewayCourseCompleted[GatewayThreeCourseComplete],",
                "                TRUE ()",
                "            )",
                "                && FIRSTNONBLANK (",
                "                    TeacherCandidateGatewayCourseCompleted[GatewayGPA] >= 3.0,",
                "                    TRUE ()",
                "                )",
                "                && FIRSTNONBLANK (",
                "                    TeacherCandidateGatewayCourseCompleted[GatewayFieldWorkHours] >= 10.0,",
                "                    TRUE ()",
                "                ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    ),",
                "    SUMMARIZE (",
                "        FILTER (",
                "            TeacherCandidateGatewayCourseCompleted,",
                "            NOT (",
                "                ISBLANK ( TeacherCandidateGatewayCourseCompleted[GatewayFourCourseComplete] )",
                "            )",
                "        ),",
                "         TeacherCandidateGatewayCourseCompleted[TeacherCandidateSchoolYearInstanceKey],TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey],",
                "        \"GateWay\", \"Gateway #4\",",
                "        \"Criteria\", \"Overall\",",
                "        \"Status\", IF (",
                "            FIRSTNONBLANK (",
                "                TeacherCandidateGatewayCourseCompleted[GatewayFourCourseComplete],",
                "                TRUE ()",
                "            )",
                "                && FIRSTNONBLANK (",
                "                    TeacherCandidateGatewayCourseCompleted[GatewayGPA] >= 3.0,",
                "                    TRUE ()",
                "                )",
                "                && FIRSTNONBLANK (",
                "                    TeacherCandidateGatewayCourseCompleted[GatewayFieldWorkHours] >= 30.0,",
                "                    TRUE ()",
                "                ),",
                "            \"Meets Criteria\",",
                "            \"Does Not Meet Criteria\"",
                "        )",
                "    )",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherCandidatePreProgramGPA",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateAcademicRecordFact[TeacherCandidateKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SchoolYear",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateAcademicRecordFact[SchoolYear]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "TermDescriptorId",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateAcademicRecordFact[TermDescriptorId]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "CumulativeGradePointAverage",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateAcademicRecordFact[CumulativeGradePointAverage]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "GPAType",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateAcademicRecordFact[GPAType]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateAcademicRecordFact[TeacherCandidateSchoolYearInstanceKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "GPARange",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "TeacherCandidateAcademicRecordFact[GPARange]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "CALCULATETABLE",
                "( ",
                "TeacherCandidateAcademicRecordFact, FILTER(TeacherCandidateAcademicRecordFact, TeacherCandidateAcademicRecordFact[GPAType] = \"Pre-Program\")",
                " ",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "ApplicantScoresFact",
        "columns": [
          {
            "name": "ApplicantSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "ApplicantSchoolYearInstanceKey"
          },
          {
            "name": "ApplicantKey",
            "dataType": "string",
            "sourceColumn": "ApplicantKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "EducationOrganizationId",
            "dataType": "int64",
            "sourceColumn": "EducationOrganizationId"
          },
          {
            "name": "Result",
            "dataType": "double",
            "sourceColumn": "Result"
          },
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle"
          },
          {
            "type": "calculated",
            "name": "Applied",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "CALCULATE (",
              "        IF ( ISBLANK ( MAX ( ApplicantProgramFact[Status] ) ), \"No\", \"Yes\" ),",
              "        FILTER (",
              "            ApplicantProgramFact,",
              "            ApplicantProgramFact[ApplicantKey]",
              "                = EARLIER ( ApplicantScoresFact[ApplicantKey] )",
              "        )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Accepted",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "CALCULATE (",
              "        IF ( ISBLANK ( MAX ( ApplicantProgramFact[Status] ) ), \"No\", \"Yes\" ),",
              "        FILTER (",
              "            ApplicantProgramFact,",
              "            ApplicantProgramFact[ApplicantKey]",
              "                = EARLIER ( ApplicantScoresFact[ApplicantKey] )",
              "                && ApplicantProgramFact[Status] = \"Accepted\"",
              "        )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Enrolled",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "CALCULATE (",
              "        IF ( ISBLANK ( MAX ( ApplicantProgramFact[Status] ) ), \"No\", \"Yes\" ),",
              "        FILTER (",
              "            ApplicantProgramFact,",
              "            ApplicantProgramFact[ApplicantKey]",
              "                = EARLIER ( ApplicantScoresFact[ApplicantKey] )",
              "                && ApplicantProgramFact[Status] = \"Accepted\"",
              "        ),",
              "        FILTER (",
              "            ApplicantProgramFact,",
              "            NOT ( ISBLANK ( RELATED ( ApplicantDimension[TeacherCandidateKey] ) ) )",
              "        )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Status",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(ApplicantScoresFact[Enrolled] = \"Yes\",\"Enrolled\",IF(ApplicantScoresFact[Accepted]=\"Yes\",\"Accepted\",IF(ApplicantScoresFact[Applied]=\"Yes\",\"Applied\",\"None\")))"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_ApplicantScoresFact = Source{[Schema=\"analytics\",Item=\"ApplicantScoresFact\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(analytics_ApplicantScoresFact,{\"MostRecent\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherCandidateProgressionDemographicsSummary",
        "columns": [
          {
            "name": "ProgramName",
            "dataType": "string",
            "sourceColumn": "ProgramName"
          },
          {
            "name": "TeacherPreparationProviderKey",
            "dataType": "int64",
            "sourceColumn": "TeacherPreparationProviderKey"
          },
          {
            "name": "ProgramSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "ProgramSchoolYearInstanceKey"
          },
          {
            "name": "TeacherPreparationProviderName",
            "dataType": "string",
            "sourceColumn": "TeacherPreparationProviderName"
          },
          {
            "name": "RaceDescriptor",
            "dataType": "string",
            "sourceColumn": "RaceDescriptor"
          },
          {
            "name": "Sex",
            "dataType": "string",
            "sourceColumn": "Sex"
          },
          {
            "name": "Count of  Progression",
            "dataType": "int64",
            "sourceColumn": "Count of  Progression"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "Status",
            "sortByColumn": "SortOrder"
          },
          {
            "name": "SortOrder",
            "dataType": "int64",
            "sourceColumn": "SortOrder"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateProgressionDemographicsSummary = Source{[Schema=\"analytics\",Item=\"TeacherCandidateProgressionDemographicsSummary\"]}[Data]",
                "in",
                "    analytics_TeacherCandidateProgressionDemographicsSummary"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherCandidateProgressionSummary",
        "columns": [
          {
            "name": "ProgramName",
            "dataType": "string",
            "sourceColumn": "ProgramName"
          },
          {
            "name": "TeacherPreparationProviderKey",
            "dataType": "int64",
            "sourceColumn": "TeacherPreparationProviderKey"
          },
          {
            "name": "ProgramSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "ProgramSchoolYearInstanceKey"
          },
          {
            "name": "TeacherPreparationProviderName",
            "dataType": "string",
            "sourceColumn": "TeacherPreparationProviderName"
          },
          {
            "name": "Count of  Progression",
            "dataType": "int64",
            "sourceColumn": "Count of  Progression"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "Status",
            "sortByColumn": "SortOrder"
          },
          {
            "name": "SortOrder",
            "dataType": "int64",
            "sourceColumn": "SortOrder"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateProgressionSummary = Source{[Schema=\"analytics\",Item=\"TeacherCandidateProgressionSummary\"]}[Data]",
                "in",
                "    analytics_TeacherCandidateProgressionSummary"
              ]
            }
          }
        ]
      },
      {
        "name": "TeacherCandidateProgressionScoreSummary",
        "columns": [
          {
            "name": "Order",
            "dataType": "int64",
            "sourceColumn": "Order"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "Status"
          },
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle"
          },
          {
            "name": "Score",
            "dataType": "double",
            "sourceColumn": "Score"
          },
          {
            "name": "ApplicantSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "ApplicantSchoolYearInstanceKey"
          },
          {
            "name": "ProgramSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "ProgramSchoolYearInstanceKey"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateProgressionScoreSummary = Source{[Schema=\"analytics\",Item=\"TeacherCandidateProgressionScoreSummary\"]}[Data]",
                "in",
                "    analytics_TeacherCandidateProgressionScoreSummary"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "MedianAcceptedACT",
            "expression": " CALCULATE(MEDIAN(TeacherCandidateProgressionScoreSummary[Score]), FILTER(TeacherCandidateProgressionScoreSummary, TeacherCandidateProgressionScoreSummary[AssessmentTitle] = \"ACT score\" && TeacherCandidateProgressionScoreSummary[Status]=\"Accepted\"))",
            "formatString": "0.0"
          },
          {
            "name": "MedianAcceptedGPA",
            "expression": " CALCULATE(MEDIAN(TeacherCandidateProgressionScoreSummary[Score]), FILTER(TeacherCandidateProgressionScoreSummary, TeacherCandidateProgressionScoreSummary[AssessmentTitle] = \"Overall GPA\" && TeacherCandidateProgressionScoreSummary[Status]=\"Accepted\"))",
            "formatString": "0.00"
          },
          {
            "name": "MedianAcceptedSAT",
            "expression": " CALCULATE(MEDIAN(TeacherCandidateProgressionScoreSummary[Score]), FILTER(TeacherCandidateProgressionScoreSummary, TeacherCandidateProgressionScoreSummary[AssessmentTitle] = \"SAT score\" && TeacherCandidateProgressionScoreSummary[Status]=\"Accepted\"))",
            "formatString": "0.0"
          },
          {
            "name": "MedianAppliedACT",
            "expression": " CALCULATE(MEDIAN(TeacherCandidateProgressionScoreSummary[Score]), FILTER(TeacherCandidateProgressionScoreSummary, TeacherCandidateProgressionScoreSummary[AssessmentTitle] = \"ACT score\" && TeacherCandidateProgressionScoreSummary[Status]=\"Applied\"))",
            "formatString": "0.0"
          },
          {
            "name": "MedianAppliedGPA",
            "expression": " CALCULATE(MEDIAN(TeacherCandidateProgressionScoreSummary[Score]), FILTER(TeacherCandidateProgressionScoreSummary, TeacherCandidateProgressionScoreSummary[AssessmentTitle] = \"Overall GPA\" && TeacherCandidateProgressionScoreSummary[Status]=\"Applied\"))",
            "formatString": "0.00"
          },
          {
            "name": "MedianAppliedSAT",
            "expression": " CALCULATE(MEDIAN(TeacherCandidateProgressionScoreSummary[Score]), FILTER(TeacherCandidateProgressionScoreSummary, TeacherCandidateProgressionScoreSummary[AssessmentTitle] = \"SAT score\" && TeacherCandidateProgressionScoreSummary[Status]=\"Applied\"))",
            "formatString": "0.0"
          },
          {
            "name": "MedianEnrolledACT",
            "expression": " CALCULATE(MEDIAN(TeacherCandidateProgressionScoreSummary[Score]), FILTER(TeacherCandidateProgressionScoreSummary, TeacherCandidateProgressionScoreSummary[AssessmentTitle] = \"ACT score\" && TeacherCandidateProgressionScoreSummary[Status]=\"Enrolled\"))",
            "formatString": "0.0"
          },
          {
            "name": "MedianEnrolledGPA",
            "expression": " CALCULATE(MEDIAN(TeacherCandidateProgressionScoreSummary[Score]), FILTER(TeacherCandidateProgressionScoreSummary, TeacherCandidateProgressionScoreSummary[AssessmentTitle] = \"Overall GPA\" && TeacherCandidateProgressionScoreSummary[Status]=\"Enrolled\"))",
            "formatString": "0.00"
          },
          {
            "name": "MedianEnrolledSAT",
            "expression": " CALCULATE(MEDIAN(TeacherCandidateProgressionScoreSummary[Score]), FILTER(TeacherCandidateProgressionScoreSummary, TeacherCandidateProgressionScoreSummary[AssessmentTitle] = \"SAT score\" && TeacherCandidateProgressionScoreSummary[Status]=\"Enrolled\"))",
            "formatString": "0.0"
          }
        ]
      },
      {
        "name": "TeacherCandidateGatewayCourseCompleted",
        "columns": [
          {
            "name": "TeacherCandidateSchoolYearInstanceKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateSchoolYearInstanceKey"
          },
          {
            "name": "TeacherCandidateKey",
            "dataType": "string",
            "sourceColumn": "TeacherCandidateKey"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear"
          },
          {
            "name": "GatewayOneCourseComplete",
            "dataType": "boolean",
            "sourceColumn": "GateWayOneCourseComplete",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "GatewayTwoCourseComplete",
            "dataType": "boolean",
            "sourceColumn": "GateWayTwoCourseComplete",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "GatewayThreeCourseComplete",
            "dataType": "boolean",
            "sourceColumn": "GateWayThreeCourseComplete",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "GatewayFourCourseComplete",
            "dataType": "boolean",
            "sourceColumn": "GateWayFourCourseComplete",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "GatewayFieldWorkHours",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "  VAR hours =",
              "        CALCULATE (",
              "            SUMX (",
              "                TeacherCandidateFieldworkExperienceFact,",
              "                TeacherCandidateFieldworkExperienceFact[HoursPerWeek]",
              "            ),",
              "            TeacherCandidateDimension",
              "        )",
              "    RETURN",
              "       hours"
            ]
          },
          {
            "type": "calculated",
            "name": "GatewayGPA",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "VAR gpa =",
              "    CALCULATE (",
              "        MAXX (",
              "            FILTER (",
              "                TeacherCandidateAcademicRecordFact,",
              "                TeacherCandidateAcademicRecordFact[SchoolYear]",
              "                    = MAXX (",
              "                        TeacherCandidateAcademicRecordFact,",
              "                        TeacherCandidateAcademicRecordFact[SchoolYear]",
              "                    )",
              "                    && TeacherCandidateAcademicRecordFact[TermDescriptorId]",
              "                        = MAXX (",
              "                            TeacherCandidateAcademicRecordFact,",
              "                            TeacherCandidateAcademicRecordFact[TermDescriptorId]",
              "                        )",
              "            ),",
              "            TeacherCandidateAcademicRecordFact[CumulativeGradePointAverage]",
              "        )",
              "    )",
              "RETURN",
              "gpa"
            ]
          },
          {
            "type": "calculated",
            "name": "GatewayOne",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF (",
              "    VAR gateway = TeacherCandidateGatewayCourseCompleted[GatewayOneCourseComplete]",
              "    VAR gpa = TeacherCandidateGatewayCourseCompleted[GatewayGPA]",
              "    RETURN",
              "        gpa >= 2.5",
              "            && gateway,",
              "    \"Meets Criteria\",",
              "    \"Does Not Meet Criteria\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "GatewayTwo",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF (",
              "    ",
              "        VAR gateway =",
              "           ",
              "                TeacherCandidateGatewayCourseCompleted[GatewayOneCourseComplete]",
              "        VAR gpa =",
              "           TeacherCandidateGatewayCourseCompleted[GatewayGPA]",
              "        RETURN",
              "             gpa >= 2.8 && gateway",
              "    ,",
              "    \"Meets Criteria\",",
              "    \"Does Not Meet Criteria\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "GatewayThree",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF (",
              "        VAR gateway =",
              "            ",
              "                TeacherCandidateGatewayCourseCompleted[GatewayOneCourseComplete]",
              "        VAR gpa =",
              "             TeacherCandidateGatewayCourseCompleted[GatewayGPA]",
              "        VAR FieldWorkHours =",
              "            ",
              "                TeacherCandidateGatewayCourseCompleted[GatewayFieldWorkHours]",
              "        RETURN",
              "             gpa >= 3.0 && gateway && FieldWorkHours >= 10",
              "   ,",
              "    \"Meets Criteria\",",
              "    \"Does Not Meet Criteria\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "GatewayFour",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF (",
              "    VAR gateway = TeacherCandidateGatewayCourseCompleted[GatewayOneCourseComplete]",
              "    VAR gpa = TeacherCandidateGatewayCourseCompleted[GatewayGPA]",
              "    VAR FieldWorkHours = TeacherCandidateGatewayCourseCompleted[GatewayFieldWorkHours]",
              "    RETURN",
              "        gpa >= 3.0",
              "            && FieldWorkHours >= 30",
              "            && gateway,",
              "    \"Meets Criteria\",",
              "    \"Does Not Meet Criteria\"",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"Ed-Fi-Ods\",",
                "    analytics_TeacherCandidateGatewayCourseCompleted = Value.NativeQuery(#\"Ed-Fi-Ods\", \"exec analytics_config.MultipleYearSnapShots @viewname =N'analytics.TeacherCandidateGatewayCourseCompleted'\")",
                "in",
                "    analytics_TeacherCandidateGatewayCourseCompleted"
              ]
            }
          }
        ]
      },
      {
        "name": "ReviewerStaffDimension",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "StaffKey",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StaffDimension[StaffKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "StaffFullName",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StaffDimension[StaffFullName]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Sex",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StaffDimension[Sex]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "RaceDescriptor",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StaffDimension[RaceDescriptor]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "StaffSchoolYearInstanceKey",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StaffDimension[StaffSchoolYearInstanceKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SchoolYear",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "StaffDimension[SchoolYear]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "StaffDimension"
            }
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "302668bf-e0f8-47ba-ad96-f397a060b51d",
        "fromTable": "ApplicantDimension",
        "fromColumn": "ApplicantSchoolYearInstanceKey",
        "toTable": "ApplicantFacts",
        "toColumn": "ApplicantSchoolyearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "b8ed0f0f-5ac9-4b01-be22-99cce7e57028",
        "fromTable": "ApplicantProgramFact",
        "fromColumn": "ApplicantSchoolYearInstanceKey",
        "toTable": "ApplicantDimension",
        "toColumn": "ApplicantSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "2c31ffe7-9065-49a0-8e6f-0690eb6cfd27",
        "fromTable": "ApplicantProgramFact",
        "fromColumn": "ProgramSchoolYearInstanceKey",
        "toTable": "TeacherPreparationProviderProgramDimension",
        "toColumn": "ProgramSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "c5ae096e-53bc-4b0a-b99a-2392ef0c060a",
        "fromTable": "MentorTeacherGradeLevelAcademicSubject",
        "fromColumn": "StaffSchoolYearInstanceKey",
        "toTable": "StaffDimension",
        "toColumn": "StaffSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "9c2df346-706a-4fc3-adad-7309bce2dfae",
        "fromTable": "MentorTeacherProfessionalDevelopment",
        "fromColumn": "StaffSchoolYearInstancekey",
        "toTable": "StaffDimension",
        "toColumn": "StaffSchoolYearInstanceKey"
      },
      {
        "name": "99692469-43e7-4d60-8fd0-b6f464cdf021",
        "fromTable": "SchoolDimension",
        "fromColumn": "LocalEducationAgencySchoolYearInstaceKey",
        "toTable": "LocalEducationAgencyDimension",
        "toColumn": "LocalEducationAgencySchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "8fc17069-8a4f-4179-ac11-710326bae3e4",
        "fromTable": "SchoolFacts",
        "fromColumn": "SchoolSchoolYearInstanceSetKey",
        "toTable": "SchoolDimension",
        "toColumn": "SchoolSchoolYearInstaceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "dc9f8ed7-0dd0-4bb5-a5ab-d5fd523f97f1",
        "fromTable": "SchoolStudentAssessmentFact",
        "fromColumn": "SchoolSchoolYearInstanceKey",
        "toTable": "SchoolDimension",
        "toColumn": "SchoolSchoolYearInstaceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "bdc8f4f5-4d6b-4a26-b257-5dcf408400c8",
        "fromTable": "StaffCredential",
        "fromColumn": "StaffSchoolYearInstanceKey",
        "toTable": "StaffDimension",
        "toColumn": "StaffSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "e3598b61-ad2c-4e01-91dd-0a59a06bbe1d",
        "fromTable": "StaffEducationOrganizationAssociationDimension",
        "fromColumn": "StaffSchoolYearInstanceKey",
        "toTable": "ReviewerStaffDimension",
        "toColumn": "StaffSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "8ac7c8c4-20e5-42b8-8baa-4131769b166c",
        "fromTable": "StaffSectionAssociation",
        "fromColumn": "StaffSchoolYearInstanceKey",
        "toTable": "TeacherCandidateStaffDimension",
        "toColumn": "StaffSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "7edba299-ec1c-4af9-af4c-90313a421d15",
        "fromTable": "StaffStudentGrowthMeasure",
        "fromColumn": "StaffSchoolYearInstanceKey",
        "toTable": "TeacherCandidateStaffDimension",
        "toColumn": "StaffSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "68792cd4-69f2-4c11-a058-3b4cc4b5fc7b",
        "fromTable": "StudentAssessment",
        "fromColumn": "StudentSchoolYearInstanceKey",
        "toTable": "SectionStudentDimension",
        "toColumn": "StudentSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "10bf991e-15d0-491f-a474-d216b661dfbb",
        "fromTable": "StudentDimension",
        "fromColumn": "SchoolSchoolYearInstanceKey",
        "toTable": "SchoolDimension",
        "toColumn": "SchoolSchoolYearInstaceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "292a62ea-7e02-4105-aa3c-4edfaf2e2f5e",
        "fromTable": "StudentSectionDimension",
        "fromColumn": "SectionSchoolYearInstanceKey",
        "toTable": "Section",
        "toColumn": "SectionSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "49f13d7e-cf36-435b-b29a-c038855b4f04",
        "fromTable": "StudentSectionDimension",
        "fromColumn": "StudentSchoolYearInstanceKey",
        "toTable": "SectionStudentDimension",
        "toColumn": "StudentSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "8ff4cd7c-de50-4e55-b01d-fac375f41b7d",
        "fromTable": "TeacherCandidateAcademicRecordFact",
        "fromColumn": "TeacherCandidateSchoolYearInstanceKey",
        "toTable": "TeacherCandidateDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "800f6805-014e-4e1a-ac63-0f022353c4cd",
        "fromTable": "TeacherCandidateAssessment",
        "fromColumn": "TeacherCandidateSchoolYearInstanceKey",
        "toTable": "TeacherCandidateDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "ee5429df-e0c4-4444-9e23-8024ca8cee89",
        "fromTable": "TeacherCandidateCourseTranscriptFact",
        "fromColumn": "TeacherCandidateSchoolYearInstanceKey",
        "toTable": "TeacherCandidateDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "6494b8b4-6aad-4f19-a0af-c4ea3085f599",
        "fromTable": "TeacherCandidateEnrolledSectionAssociation",
        "fromColumn": "TeacherCandidateSchoolYearInstanceSetKey",
        "toTable": "TeacherCandidateDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "038a292b-1e14-475c-b097-8b29cf82cd32",
        "fromTable": "TeacherCandidateFieldworkExperienceFact",
        "fromColumn": "SchoolSchoolYearInstanceKey",
        "toTable": "SchoolDimension",
        "toColumn": "SchoolSchoolYearInstaceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "7ac39d70-5fb9-489b-9442-486d1e52ff8e",
        "fromTable": "TeacherCandidateFieldworkExperienceFact",
        "fromColumn": "TeacherCandidateSchoolYearInstanceKey",
        "toTable": "TeacherCandidateDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "f772fab6-deb8-4fc3-9948-c5ed1afbeb07",
        "fromTable": "TeacherCandidateFieldworkPlacement",
        "fromColumn": "TeacherCandidateSchoolYearInstanceKey",
        "toTable": "TeacherCandidateStaffDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "3f1a2568-046e-410b-8597-0151f07d4cf7",
        "fromTable": "TeacherCandidateGatewayDetailSummary",
        "fromColumn": "TeacherCandidateSchoolYearInstanceKey",
        "toTable": "TeacherCandidateDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "1a1e0d9b-f583-4246-877b-66c38ed8b496",
        "fromTable": "TeacherCandidatePerformanceMeasureFact",
        "fromColumn": "StaffSchoolYearInstanceKey",
        "toTable": "ReviewerStaffDimension",
        "toColumn": "StaffSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "ce4b305e-d72a-4250-994d-66f20dc8e735",
        "fromTable": "TeacherCandidatePerformanceMeasureFact",
        "fromColumn": "TeacherCandidateSchoolYearInstanceKey",
        "toTable": "TeacherCandidateDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "281582a1-f6bf-454b-8715-c16d2dfd8e9f",
        "fromTable": "TeacherCandidatePreProgramGPA",
        "fromColumn": "TeacherCandidateSchoolYearInstanceKey",
        "toTable": "TeacherCandidateDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "4d141093-7483-4276-a48e-7d8b7b48d862",
        "fromTable": "TeacherCandidateProgramFact",
        "fromColumn": "ProgramSchoolyearInstaceKey",
        "toTable": "TeacherPreparationProviderProgramDimension",
        "toColumn": "ProgramSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "aebc5927-ac55-489b-8d55-81d870ee9150",
        "fromTable": "TeacherCandidateProgramFact",
        "fromColumn": "TeacherCandidateSchoolyearInstaceKey",
        "toTable": "TeacherCandidateDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "433cfabe-cd97-4b37-8b9d-263a831f0c57",
        "fromTable": "TeacherCandidateStaffAssociation",
        "fromColumn": "StaffSchoolYearInstanceKey",
        "toTable": "StaffDimension",
        "toColumn": "StaffSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "f4e438f6-f1ce-4c8c-ade5-dcde7a526628",
        "fromTable": "TeacherCandidateStaffAssociation",
        "fromColumn": "TeacherCandidateSchoolYearInstanceKey",
        "toTable": "TeacherCandidateDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "a0f1f155-0962-4fa7-bc0d-2151b8ec7067",
        "fromTable": "TeacherCandidateStaffCredential",
        "fromColumn": "StaffSchoolYearInstanceKey",
        "toTable": "TeacherCandidateStaffDimension",
        "toColumn": "StaffSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "c0613875-f2a4-487b-aeed-91262216ca3a",
        "fromTable": "TeacherCandidateStaffDimension",
        "fromColumn": "SchoolSchoolYearInstanceKey",
        "toTable": "SchoolDimension",
        "toColumn": "SchoolSchoolYearInstaceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "d632645a-3e85-4934-8147-5e2dcb440ec0",
        "fromTable": "TeacherCandidateSurveyResponseFact",
        "fromColumn": "TeacherCandidateSchoolYearInstanceKey",
        "toTable": "TeacherCandidateDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "5a8ce7dc-8ddd-4ead-81c3-f9d4bfcbccaa",
        "fromTable": "StaffSurveyResponseFact",
        "fromColumn": "StaffSchoolYearInstanceKey",
        "toTable": "StaffDimension",
        "toColumn": "StaffSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "8890171b-6a3d-4366-859a-90882e48c21d",
        "fromTable": "Section",
        "fromColumn": "SectionSchoolYearInstanceKey",
        "toTable": "StaffSectionAssociation",
        "toColumn": "SectionSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "10175268-6dd9-4238-ab28-cb37d2156a59",
        "fromTable": "StudentSurveyResponseFact",
        "fromColumn": "TeacherCandidateSchoolYearInstanceKey",
        "toTable": "TeacherCandidateDimension",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey"
      },
      {
        "name": "54a97e03-d003-4ae6-b1a0-6943ae4b7e4b",
        "fromTable": "TeacherCandidateProgramFact",
        "fromColumn": "TeacherCandidateSchoolyearInstaceKey",
        "toTable": "TeacherCandidateGatewayCourseCompleted",
        "toColumn": "TeacherCandidateSchoolYearInstanceKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "e3583ec9-93b3-4ed5-97bf-b095bc041600",
        "fromTable": "ApplicantScoresFact",
        "fromColumn": "ApplicantSchoolYearInstanceKey",
        "toTable": "ApplicantDimension",
        "toColumn": "ApplicantSchoolYearInstanceKey"
      },
      {
        "name": "df60abf3-f3bb-4c69-a806-b196f361a81c",
        "fromTable": "TeacherCandidateProgressionDemographicsSummary",
        "fromColumn": "ProgramSchoolYearInstanceKey",
        "toTable": "TeacherPreparationProviderProgramDimension",
        "toColumn": "ProgramSchoolYearInstanceKey"
      },
      {
        "name": "76eff7db-588e-40be-bd22-7a2581b11a34",
        "fromTable": "TeacherCandidateProgressionSummary",
        "fromColumn": "ProgramSchoolYearInstanceKey",
        "toTable": "TeacherPreparationProviderProgramDimension",
        "toColumn": "ProgramSchoolYearInstanceKey"
      },
      {
        "name": "5abb89b2-8648-41d6-aaf9-624e0b128548",
        "fromTable": "TeacherCandidateProgramFact",
        "fromColumn": "TeacherPreparationProviderSchoolYearInstanceKey",
        "toTable": "TeacherPreparationProviderDimension",
        "toColumn": "TeacherPreparationProviderSchoolYearInstanceKey"
      },
      {
        "name": "19bd7892-73ff-49cc-96ab-7b648c8c03d2",
        "fromTable": "TeacherCandidateProgressionScoreSummary",
        "fromColumn": "ProgramSchoolYearInstanceKey",
        "toTable": "TeacherPreparationProviderProgramDimension",
        "toColumn": "ProgramSchoolYearInstanceKey"
      }
    ],
    "roles": [
      {
        "name": "Administrator",
        "modelPermission": "administrator",
        "members": [
          {
            "memberName": "S-1-5-21-2100725866-3154374084-172954678-2111",
            "memberId": "S-1-5-21-2100725866-3154374084-172954678-2111"
          },
          {
            "memberName": "S-1-5-21-2100725866-3154374084-172954678-1446",
            "memberId": "S-1-5-21-2100725866-3154374084-172954678-1446"
          },
          {
            "memberName": "S-1-5-21-2100725866-3154374084-172954678-2107",
            "memberId": "S-1-5-21-2100725866-3154374084-172954678-2107"
          },
          {
            "memberName": "S-1-5-21-2100725866-3154374084-172954678-1480",
            "memberId": "S-1-5-21-2100725866-3154374084-172954678-1480"
          }
        ]
      },
      {
        "name": "Supervisor",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "S-1-5-21-2100725866-3154374084-172954678-2105",
            "memberId": "S-1-5-21-2100725866-3154374084-172954678-2105"
          },
          {
            "memberName": "S-1-5-21-2100725866-3154374084-172954678-2112",
            "memberId": "S-1-5-21-2100725866-3154374084-172954678-2112"
          }
        ],
        "tablePermissions": [
          {
            "name": "TeacherCandidateDimension",
            "filterExpression": [
              "TeacherCandidateDimension[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateDimension[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateStaffAssociation",
            "filterExpression": [
              "TeacherCandidateStaffAssociation[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateStaffAssociation[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateCourseTranscriptFact",
            "filterExpression": [
              "TeacherCandidateCourseTranscriptFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateCourseTranscriptFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateAcademicRecordFact",
            "filterExpression": [
              "TeacherCandidateAcademicRecordFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateAcademicRecordFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateAssessment",
            "filterExpression": [
              "TeacherCandidateAssessment[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateAssessment[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateEnrolledSectionAssociation",
            "filterExpression": [
              "TeacherCandidateEnrolledSectionAssociation[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateEnrolledSectionAssociation[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateFieldworkExperienceFact",
            "filterExpression": [
              "TeacherCandidateFieldworkExperienceFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateFieldworkExperienceFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateProgramFact",
            "filterExpression": [
              "TeacherCandidateProgramFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateProgramFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidatePerformanceMeasureFact",
            "filterExpression": [
              "TeacherCandidatePerformanceMeasureFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidatePerformanceMeasureFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateGatewayDetailSummary",
            "filterExpression": [
              "TeacherCandidateGatewayDetailSummary[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateGatewayDetailSummary[TeacherCandidateKey]",
              "    )",
              ""
            ]
          },
          {
            "name": "TeacherCandidateSurveyResponseFact",
            "filterExpression": [
              "TeacherCandidateSurveyResponseFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateSurveyResponseFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidatePreProgramGPA",
            "filterExpression": [
              "TeacherCandidatePreProgramGPA[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidatePreProgramGPA[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateGatewayCourseCompleted",
            "filterExpression": [
              "TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey]",
              "    )",
              ""
            ]
          }
        ]
      },
      {
        "name": "Teacher Candidate",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "S-1-5-21-2100725866-3154374084-172954678-2114",
            "memberId": "S-1-5-21-2100725866-3154374084-172954678-2114"
          },
          {
            "memberName": "S-1-5-21-2100725866-3154374084-172954678-2106",
            "memberId": "S-1-5-21-2100725866-3154374084-172954678-2106"
          }
        ],
        "tablePermissions": [
          {
            "name": "TeacherCandidateDimension",
            "filterExpression": [
              "TeacherCandidateDimension[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateDimension[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateCourseTranscriptFact",
            "filterExpression": [
              "TeacherCandidateCourseTranscriptFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateCourseTranscriptFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateAcademicRecordFact",
            "filterExpression": [
              "TeacherCandidateAcademicRecordFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateAcademicRecordFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateAssessment",
            "filterExpression": [
              "TeacherCandidateAssessment[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateAssessment[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateEnrolledSectionAssociation",
            "filterExpression": [
              "TeacherCandidateEnrolledSectionAssociation[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateEnrolledSectionAssociation[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateFieldworkExperienceFact",
            "filterExpression": [
              "TeacherCandidateFieldworkExperienceFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateFieldworkExperienceFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateProgramFact",
            "filterExpression": [
              "TeacherCandidateProgramFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateProgramFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidatePerformanceMeasureFact",
            "filterExpression": [
              "TeacherCandidatePerformanceMeasureFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidatePerformanceMeasureFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateStaffAssociation",
            "filterExpression": [
              "TeacherCandidateStaffAssociation[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateStaffAssociation[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateGatewayDetailSummary",
            "filterExpression": [
              "TeacherCandidateGatewayDetailSummary[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateGatewayDetailSummary[TeacherCandidateKey]",
              "    )",
              ""
            ]
          },
          {
            "name": "TeacherCandidateSurveyResponseFact",
            "filterExpression": [
              "TeacherCandidateSurveyResponseFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateSurveyResponseFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateFieldworkPlacement",
            "filterExpression": [
              "TeacherCandidateFieldworkPlacement[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateFieldworkPlacement[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidatePreProgramGPA",
            "filterExpression": [
              "TeacherCandidatePreProgramGPA[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidatePreProgramGPA[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateGatewayCourseCompleted",
            "filterExpression": [
              "TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey]",
              "    )",
              ""
            ]
          }
        ]
      },
      {
        "name": "Teachers",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "S-1-5-21-2100725866-3154374084-172954678-2113",
            "memberId": "S-1-5-21-2100725866-3154374084-172954678-2113"
          }
        ],
        "tablePermissions": [
          {
            "name": "TeacherCandidateDimension",
            "filterExpression": [
              "TeacherCandidateDimension[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateDimension[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateCourseTranscriptFact",
            "filterExpression": [
              "TeacherCandidateCourseTranscriptFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateCourseTranscriptFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateAcademicRecordFact",
            "filterExpression": [
              "TeacherCandidateAcademicRecordFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateAcademicRecordFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateAssessment",
            "filterExpression": [
              "TeacherCandidateAssessment[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateAssessment[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateEnrolledSectionAssociation",
            "filterExpression": [
              "TeacherCandidateEnrolledSectionAssociation[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateEnrolledSectionAssociation[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateFieldworkExperienceFact",
            "filterExpression": [
              "TeacherCandidateFieldworkExperienceFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateFieldworkExperienceFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateProgramFact",
            "filterExpression": [
              "TeacherCandidateProgramFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateProgramFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidatePerformanceMeasureFact",
            "filterExpression": [
              "TeacherCandidatePerformanceMeasureFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidatePerformanceMeasureFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateStaffAssociation",
            "filterExpression": [
              "TeacherCandidateStaffAssociation[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateStaffAssociation[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateGatewayDetailSummary",
            "filterExpression": [
              "TeacherCandidateGatewayDetailSummary[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateGatewayDetailSummary[TeacherCandidateKey]",
              "    )",
              ""
            ]
          },
          {
            "name": "TeacherCandidateSurveyResponseFact",
            "filterExpression": [
              "TeacherCandidateSurveyResponseFact[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateSurveyResponseFact[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateFieldworkPlacement",
            "filterExpression": [
              "TeacherCandidateFieldworkPlacement[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateFieldworkPlacement[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidatePreProgramGPA",
            "filterExpression": [
              "TeacherCandidatePreProgramGPA[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidatePreProgramGPA[TeacherCandidateKey]",
              "    )"
            ]
          },
          {
            "name": "TeacherCandidateGatewayCourseCompleted",
            "filterExpression": [
              "TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey]",
              "    = LOOKUPVALUE (",
              "        Security[TeacherCandidateKey],",
              "        Security[LoginId], USERNAME (),",
              "        Security[TeacherCandidateKey], TeacherCandidateGatewayCourseCompleted[TeacherCandidateKey]",
              "    )",
              ""
            ]
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "500"
      },
      {
        "name": "__BNorm",
        "value": "1"
      }
    ]
  },
  "id": "SemanticModel"
}